/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type * as badBeaconSol from "./BadBeacon.sol";
export type { badBeaconSol };
import type * as bitmapMockSol from "./BitmapMock.sol";
export type { bitmapMockSol };
import type * as contextMockSol from "./ContextMock.sol";
export type { contextMockSol };
import type * as doubleEndedQueueMockSol from "./DoubleEndedQueueMock.sol";
export type { doubleEndedQueueMockSol };
import type * as dummyImplementationSol from "./DummyImplementation.sol";
export type { dummyImplementationSol };
import type * as erc165 from "./ERC165";
export type { erc165 };
import type * as enumerableMapMockSol from "./EnumerableMapMock.sol";
export type { enumerableMapMockSol };
import type * as enumerableSetMockSol from "./EnumerableSetMock.sol";
export type { enumerableSetMockSol };
import type * as governorVoteMockSol from "./GovernorVoteMock.sol";
export type { governorVoteMockSol };
import type * as initializableMockSol from "./InitializableMock.sol";
export type { initializableMockSol };
import type * as multipleInheritanceInitializableMocksSol from "./MultipleInheritanceInitializableMocks.sol";
export type { multipleInheritanceInitializableMocksSol };
import type * as regressionImplementationSol from "./RegressionImplementation.sol";
export type { regressionImplementationSol };
import type * as safeErc20HelperSol from "./SafeERC20Helper.sol";
export type { safeErc20HelperSol };
import type * as singleInheritanceInitializableMocksSol from "./SingleInheritanceInitializableMocks.sol";
export type { singleInheritanceInitializableMocksSol };
import type * as uups from "./UUPS";
export type { uups };
import type * as compound from "./compound";
export type { compound };
import type * as crosschain from "./crosschain";
export type { crosschain };
import type * as wizard from "./wizard";
export type { wizard };
export type { AccessControlCrossChainMock } from "./AccessControlCrossChainMock";
export type { AccessControlEnumerableMock } from "./AccessControlEnumerableMock";
export type { AccessControlMock } from "./AccessControlMock";
export type { AddressImpl } from "./AddressImpl";
export type { ArraysImpl } from "./ArraysImpl";
export type { Base64Mock } from "./Base64Mock";
export type { CallReceiverMock } from "./CallReceiverMock";
export type { CheckpointsImpl } from "./CheckpointsImpl";
export type { ClashingImplementation } from "./ClashingImplementation";
export type { ClonesMock } from "./ClonesMock";
export type { ConditionalEscrowMock } from "./ConditionalEscrowMock";
export type { CountersImpl } from "./CountersImpl";
export type { Create2Impl } from "./Create2Impl";
export type { ECDSAMock } from "./ECDSAMock";
export type { EIP712External } from "./EIP712External";
export type { ERC1155BurnableMock } from "./ERC1155BurnableMock";
export type { ERC1155Mock } from "./ERC1155Mock";
export type { ERC1155PausableMock } from "./ERC1155PausableMock";
export type { ERC1155ReceiverMock } from "./ERC1155ReceiverMock";
export type { ERC1155SupplyMock } from "./ERC1155SupplyMock";
export type { ERC1155URIStorageMock } from "./ERC1155URIStorageMock";
export type { ERC1271WalletMock } from "./ERC1271WalletMock";
export type { ERC165CheckerMock } from "./ERC165CheckerMock";
export type { ERC165Mock } from "./ERC165Mock";
export type { ERC165StorageMock } from "./ERC165StorageMock";
export type { ERC1820ImplementerMock } from "./ERC1820ImplementerMock";
export type { ERC20BurnableMock } from "./ERC20BurnableMock";
export type { ERC20CappedMock } from "./ERC20CappedMock";
export type { ERC20DecimalsMock } from "./ERC20DecimalsMock";
export type { ERC20FlashMintMock } from "./ERC20FlashMintMock";
export type { ERC20Mock } from "./ERC20Mock";
export type { ERC20PausableMock } from "./ERC20PausableMock";
export type { ERC20PermitMock } from "./ERC20PermitMock";
export type { ERC20SnapshotMock } from "./ERC20SnapshotMock";
export type { ERC20VotesCompMock } from "./ERC20VotesCompMock";
export type { ERC20VotesMock } from "./ERC20VotesMock";
export type { ERC20WrapperMock } from "./ERC20WrapperMock";
export type { ERC2771ContextMock } from "./ERC2771ContextMock";
export type { ERC3156FlashBorrowerMock } from "./ERC3156FlashBorrowerMock";
export type { ERC721BurnableMock } from "./ERC721BurnableMock";
export type { ERC721EnumerableMock } from "./ERC721EnumerableMock";
export type { ERC721Mock } from "./ERC721Mock";
export type { ERC721PausableMock } from "./ERC721PausableMock";
export type { ERC721ReceiverMock } from "./ERC721ReceiverMock";
export type { ERC721RoyaltyMock } from "./ERC721RoyaltyMock";
export type { ERC721URIStorageMock } from "./ERC721URIStorageMock";
export type { ERC721VotesMock } from "./ERC721VotesMock";
export type { ERC777Mock } from "./ERC777Mock";
export type { ERC777SenderRecipientMock } from "./ERC777SenderRecipientMock";
export type { EtherReceiverMock } from "./EtherReceiverMock";
export type { GovernorCompMock } from "./GovernorCompMock";
export type { GovernorCompatibilityBravoMock } from "./GovernorCompatibilityBravoMock";
export type { GovernorMock } from "./GovernorMock";
export type { GovernorPreventLateQuorumMock } from "./GovernorPreventLateQuorumMock";
export type { GovernorTimelockCompoundMock } from "./GovernorTimelockCompoundMock";
export type { GovernorTimelockControlMock } from "./GovernorTimelockControlMock";
export type { GovernorWithParamsMock } from "./GovernorWithParamsMock";
export type { MathMock } from "./MathMock";
export type { MerkleProofWrapper } from "./MerkleProofWrapper";
export type { MulticallTest } from "./MulticallTest";
export type { MulticallTokenMock } from "./MulticallTokenMock";
export type { OwnableMock } from "./OwnableMock";
export type { PausableMock } from "./PausableMock";
export type { PullPaymentMock } from "./PullPaymentMock";
export type { ReentrancyAttack } from "./ReentrancyAttack";
export type { ReentrancyMock } from "./ReentrancyMock";
export type { SafeCastMock } from "./SafeCastMock";
export type { SafeMathMock } from "./SafeMathMock";
export type { SignatureCheckerMock } from "./SignatureCheckerMock";
export type { SignedMathMock } from "./SignedMathMock";
export type { SignedSafeMathMock } from "./SignedSafeMathMock";
export type { StorageSlotMock } from "./StorageSlotMock";
export type { StringsMock } from "./StringsMock";
export type { TimersBlockNumberImpl } from "./TimersBlockNumberImpl";
export type { TimersTimestampImpl } from "./TimersTimestampImpl";
export type { VotesMock } from "./VotesMock";
