/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155URIStorageMock,
  ERC1155URIStorageMockInterface,
} from "../../../openzeppelin-contracts-4.6.0/mocks/ERC1155URIStorageMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040819052600060808190526200001b916003916200007b565b503480156200002957600080fd5b50604051620023bc380380620023bc8339810160408190526200004c9162000137565b8080620000598162000062565b5050506200024f565b8051620000779060029060208401906200007b565b5050565b828054620000899062000213565b90600052602060002090601f016020900481019282620000ad5760008555620000f8565b82601f10620000c857805160ff1916838001178555620000f8565b82800160010185558215620000f8579182015b82811115620000f8578251825591602001919060010190620000db565b50620001069291506200010a565b5090565b5b808211156200010657600081556001016200010b565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200014b57600080fd5b82516001600160401b03808211156200016357600080fd5b818501915085601f8301126200017857600080fd5b8151818111156200018d576200018d62000121565b604051601f8201601f19908116603f01168101908382118183101715620001b857620001b862000121565b816040528281528886848701011115620001d157600080fd5b600093505b82841015620001f55784840186015181850187015292850192620001d6565b82841115620002075760008684830101525b98975050505050505050565b600181811c908216806200022857607f821691505b6020821081036200024957634e487b7160e01b600052602260045260246000fd5b50919050565b61215d806200025f6000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c806355f804b311610097578063a22cb46511610066578063a22cb46514610209578063e985e9c51461021c578063f242432a14610258578063f5298aca1461026b57600080fd5b806355f804b3146101bd5780636b20c454146101d0578063731133e9146101e3578063862440e2146101f657600080fd5b80630e89341c116100d35780630e89341c146101575780631f7fdffa146101775780632eb2c2d61461018a5780634e1273f41461019d57600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806302fe530514610142575b600080fd5b61010c61010736600461179b565b61027e565b6040519081526020015b60405180910390f35b61013261012d3660046117db565b610327565b6040519015158152602001610116565b6101556101503660046118af565b610379565b005b61016a6101653660046118ec565b610385565b604051610116919061195d565b610155610185366004611a05565b610390565b610155610198366004611a9e565b6103a2565b6101b06101ab366004611b48565b610444565b6040516101169190611c4e565b6101556101cb3660046118af565b610582565b6101556101de366004611c61565b61058b565b6101556101f1366004611cd5565b61059b565b610155610204366004611d2a565b6105a7565b610155610217366004611d67565b6105b5565b61013261022a366004611da3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610155610266366004611dd6565b6105c0565b610155610279366004611e3b565b61065b565b60006001600160a01b0383166103015760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061035857506001600160e01b031982166303a24d0760e21b145b8061037357506301ffc9a760e01b6001600160e01b03198316145b92915050565b61038281610666565b50565b606061037382610679565b61039c84848484610759565b50505050565b6001600160a01b0385163314806103be57506103be853361022a565b6104305760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016102f8565b61043d858585858561091f565b5050505050565b606081518351146104bd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016102f8565b6000835167ffffffffffffffff8111156104d9576104d96117f8565b604051908082528060200260200182016040528015610502578160200160208202803683370190505b50905060005b845181101561057a5761054d85828151811061052657610526611e6e565b602002602001015185838151811061054057610540611e6e565b602002602001015161027e565b82828151811061055f5761055f611e6e565b602090810291909101015261057381611e9a565b9050610508565b509392505050565b61038281610b7d565b610596838383610b90565b505050565b61039c84848484610dd3565b6105b18282610ee7565b5050565b6105b1338383610f4b565b6001600160a01b0385163314806105dc57506105dc853361022a565b61064e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016102f8565b61043d858585858561103f565b6105968383836111ea565b80516105b19060029060208401906116e6565b60008181526004602052604081208054606092919061069790611eb3565b80601f01602080910402602001604051908101604052809291908181526020018280546106c390611eb3565b80156107105780601f106106e557610100808354040283529160200191610710565b820191906000526020600020905b8154815290600101906020018083116106f357829003601f168201915b50505050509050600081511161072e5761072983611366565b610752565b600381604051602001610742929190611f09565b6040516020818303038152906040525b9392505050565b6001600160a01b0384166107b95760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102f8565b815183511461081b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102f8565b3360005b84518110156108b75783818151811061083a5761083a611e6e565b602002602001015160008087848151811061085757610857611e6e565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461089f9190611faf565b909155508190506108af81611e9a565b91505061081f565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610908929190611fc7565b60405180910390a461043d816000878787876113fa565b81518351146109815760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102f8565b6001600160a01b0384166109e55760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016102f8565b3360005b8451811015610b0f576000858281518110610a0657610a06611e6e565b602002602001015190506000858381518110610a2457610a24611e6e565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610ab75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016102f8565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610af4908490611faf565b9250508190555050505080610b0890611e9a565b90506109e9565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b5f929190611fc7565b60405180910390a4610b758187878787876113fa565b505050505050565b80516105b19060039060208401906116e6565b6001600160a01b038316610bf25760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016102f8565b8051825114610c545760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102f8565b604080516020810190915260009081905233905b8351811015610d66576000848281518110610c8557610c85611e6e565b602002602001015190506000848381518110610ca357610ca3611e6e565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610d2f5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016102f8565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610d5e81611e9a565b915050610c68565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610db7929190611fc7565b60405180910390a460408051602081019091526000905261039c565b6001600160a01b038416610e335760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102f8565b336000610e3f8561159f565b90506000610e4c8561159f565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610e7e908490611faf565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ede836000898989896115ea565b50505050505050565b60008281526004602090815260409091208251610f06928401906116e6565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b610f3284610385565b604051610f3f919061195d565b60405180910390a25050565b816001600160a01b0316836001600160a01b031603610fd25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016102f8565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166110a35760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016102f8565b3360006110af8561159f565b905060006110bc8561159f565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156111425760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016102f8565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061117f908490611faf565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111df848a8a8a8a8a6115ea565b505050505050505050565b6001600160a01b03831661124c5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016102f8565b3360006112588461159f565b905060006112658461159f565b60408051602080820183526000918290528882528181528282206001600160a01b038b16835290522054909150848110156112ee5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016102f8565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610ede565b60606002805461137590611eb3565b80601f01602080910402602001604051908101604052809291908181526020018280546113a190611eb3565b80156113ee5780601f106113c3576101008083540402835291602001916113ee565b820191906000526020600020905b8154815290600101906020018083116113d157829003601f168201915b50505050509050919050565b6001600160a01b0384163b15610b755760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061143e9089908990889088908890600401611fec565b6020604051808303816000875af1925050508015611479575060408051601f3d908101601f191682019092526114769181019061204a565b60015b61152e57611485612067565b806308c379a0036114be5750611499612083565b806114a457506114c0565b8060405162461bcd60e51b81526004016102f8919061195d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016102f8565b6001600160e01b0319811663bc197c8160e01b14610ede5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016102f8565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106115d9576115d9611e6e565b602090810291909101015292915050565b6001600160a01b0384163b15610b755760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061162e908990899088908890889060040161210d565b6020604051808303816000875af1925050508015611669575060408051601f3d908101601f191682019092526116669181019061204a565b60015b61167557611485612067565b6001600160e01b0319811663f23a6e6160e01b14610ede5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016102f8565b8280546116f290611eb3565b90600052602060002090601f016020900481019282611714576000855561175a565b82601f1061172d57805160ff191683800117855561175a565b8280016001018555821561175a579182015b8281111561175a57825182559160200191906001019061173f565b5061176692915061176a565b5090565b5b80821115611766576000815560010161176b565b80356001600160a01b038116811461179657600080fd5b919050565b600080604083850312156117ae57600080fd5b6117b78361177f565b946020939093013593505050565b6001600160e01b03198116811461038257600080fd5b6000602082840312156117ed57600080fd5b8135610752816117c5565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611834576118346117f8565b6040525050565b600082601f83011261184c57600080fd5b813567ffffffffffffffff811115611866576118666117f8565b60405161187d601f8301601f19166020018261180e565b81815284602083860101111561189257600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156118c157600080fd5b813567ffffffffffffffff8111156118d857600080fd5b6118e48482850161183b565b949350505050565b6000602082840312156118fe57600080fd5b5035919050565b60005b83811015611920578181015183820152602001611908565b8381111561039c5750506000910152565b60008151808452611949816020860160208601611905565b601f01601f19169290920160200192915050565b6020815260006107526020830184611931565b600067ffffffffffffffff82111561198a5761198a6117f8565b5060051b60200190565b600082601f8301126119a557600080fd5b813560206119b282611970565b6040516119bf828261180e565b83815260059390931b85018201928281019150868411156119df57600080fd5b8286015b848110156119fa57803583529183019183016119e3565b509695505050505050565b60008060008060808587031215611a1b57600080fd5b611a248561177f565b9350602085013567ffffffffffffffff80821115611a4157600080fd5b611a4d88838901611994565b94506040870135915080821115611a6357600080fd5b611a6f88838901611994565b93506060870135915080821115611a8557600080fd5b50611a928782880161183b565b91505092959194509250565b600080600080600060a08688031215611ab657600080fd5b611abf8661177f565b9450611acd6020870161177f565b9350604086013567ffffffffffffffff80821115611aea57600080fd5b611af689838a01611994565b94506060880135915080821115611b0c57600080fd5b611b1889838a01611994565b93506080880135915080821115611b2e57600080fd5b50611b3b8882890161183b565b9150509295509295909350565b60008060408385031215611b5b57600080fd5b823567ffffffffffffffff80821115611b7357600080fd5b818501915085601f830112611b8757600080fd5b81356020611b9482611970565b604051611ba1828261180e565b83815260059390931b8501820192828101915089841115611bc157600080fd5b948201945b83861015611be657611bd78661177f565b82529482019490820190611bc6565b96505086013592505080821115611bfc57600080fd5b50611c0985828601611994565b9150509250929050565b600081518084526020808501945080840160005b83811015611c4357815187529582019590820190600101611c27565b509495945050505050565b6020815260006107526020830184611c13565b600080600060608486031215611c7657600080fd5b611c7f8461177f565b9250602084013567ffffffffffffffff80821115611c9c57600080fd5b611ca887838801611994565b93506040860135915080821115611cbe57600080fd5b50611ccb86828701611994565b9150509250925092565b60008060008060808587031215611ceb57600080fd5b611cf48561177f565b93506020850135925060408501359150606085013567ffffffffffffffff811115611d1e57600080fd5b611a928782880161183b565b60008060408385031215611d3d57600080fd5b82359150602083013567ffffffffffffffff811115611d5b57600080fd5b611c098582860161183b565b60008060408385031215611d7a57600080fd5b611d838361177f565b915060208301358015158114611d9857600080fd5b809150509250929050565b60008060408385031215611db657600080fd5b611dbf8361177f565b9150611dcd6020840161177f565b90509250929050565b600080600080600060a08688031215611dee57600080fd5b611df78661177f565b9450611e056020870161177f565b93506040860135925060608601359150608086013567ffffffffffffffff811115611e2f57600080fd5b611b3b8882890161183b565b600080600060608486031215611e5057600080fd5b611e598461177f565b95602085013595506040909401359392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611eac57611eac611e84565b5060010190565b600181811c90821680611ec757607f821691505b602082108103611ee757634e487b7160e01b600052602260045260246000fd5b50919050565b60008151611eff818560208601611905565b9290920192915050565b600080845481600182811c915080831680611f2557607f831692505b60208084108203611f4457634e487b7160e01b86526022600452602486fd5b818015611f585760018114611f6957611f96565b60ff19861689528489019650611f96565b60008b81526020902060005b86811015611f8e5781548b820152908501908301611f75565b505084890196505b505050505050611fa68185611eed565b95945050505050565b60008219821115611fc257611fc2611e84565b500190565b604081526000611fda6040830185611c13565b8281036020840152611fa68185611c13565b60006001600160a01b03808816835280871660208401525060a0604083015261201860a0830186611c13565b828103606084015261202a8186611c13565b9050828103608084015261203e8185611931565b98975050505050505050565b60006020828403121561205c57600080fd5b8151610752816117c5565b600060033d11156120805760046000803e5060005160e01c5b90565b600060443d10156120915790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156120c157505050505090565b82850191508151818111156120d95750505050505090565b843d87010160208285010111156120f35750505050505090565b6121026020828601018761180e565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261214560a0830184611931565b97965050505050505056fea164736f6c634300080d000a";

type ERC1155URIStorageMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155URIStorageMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155URIStorageMock__factory extends ContractFactory {
  constructor(...args: ERC1155URIStorageMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155URIStorageMock> {
    return super.deploy(
      _uri,
      overrides || {}
    ) as Promise<ERC1155URIStorageMock>;
  }
  override getDeployTransaction(
    _uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_uri, overrides || {});
  }
  override attach(address: string): ERC1155URIStorageMock {
    return super.attach(address) as ERC1155URIStorageMock;
  }
  override connect(signer: Signer): ERC1155URIStorageMock__factory {
    return super.connect(signer) as ERC1155URIStorageMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155URIStorageMockInterface {
    return new utils.Interface(_abi) as ERC1155URIStorageMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155URIStorageMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155URIStorageMock;
  }
}
