/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC777Mock,
  ERC777MockInterface,
} from "../../../openzeppelin-contracts-4.6.0/mocks/ERC777Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialHolder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "defaultOperators",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
    ],
    name: "AuthorizedOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeTokenTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
    ],
    name: "RevokedOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "Sent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approveInternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "authorizeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultOperators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "granularity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
    ],
    name: "isOperatorFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "mintInternal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "requireReceptionAck",
        type: "bool",
      },
    ],
    name: "mintInternalExtended",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "operatorBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "operatorSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "revokeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002433380380620024338339810160408190526200003491620007f3565b82828282600290805190602001906200004f929190620005ec565b50815162000065906003906020850190620005ec565b5080516200007b9060049060208401906200067b565b5060005b8151811015620000eb57600160056000848481518110620000a457620000a46200091c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000e28162000948565b9150506200007f565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200016657600080fd5b505af11580156200017b573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001f957600080fd5b505af11580156200020e573d6000803e3d6000fd5b5050505050505062000247858560405180602001604052806000815250604051806020016040528060008152506200025260201b60201c565b505050505062000aa5565b6200026284848484600162000268565b50505050565b6001600160a01b038516620002c45760405162461bcd60e51b815260206004820181905260248201527f4552433737373a206d696e7420746f20746865207a65726f206164647265737360448201526064015b60405180910390fd5b33620002d48160008888620003c9565b8460016000828254620002e8919062000964565b90915550506001600160a01b038616600090815260208190526040812080548792906200031790849062000964565b909155506200032f90508160008888888888620003f8565b856001600160a01b0316816001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d8787876040516200037893929190620009ad565b60405180910390a36040518581526001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6040517f52316ab8e8b0687ce803e403dfe429541bccd4f6c4683ec65d254d382f15a26590600090a150505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa1580156200047a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004a09190620009e6565b90506001600160a01b0381161562000522576040516223de2960e01b81526001600160a01b038216906223de2990620004e8908b908b908b908b908b908b9060040162000a0b565b600060405180830381600087803b1580156200050357600080fd5b505af115801562000518573d6000803e3d6000fd5b50505050620005d3565b8115620005d35762000548866001600160a01b0316620005dd60201b6200091d1760201c565b15620005d35760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a401620002bb565b5050505050505050565b6001600160a01b03163b151590565b828054620005fa9062000a69565b90600052602060002090601f0160209004810192826200061e576000855562000669565b82601f106200063957805160ff191683800117855562000669565b8280016001018555821562000669579182015b82811115620006695782518255916020019190600101906200064c565b5062000677929150620006d3565b5090565b82805482825590600052602060002090810192821562000669579160200282015b828111156200066957825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200069c565b5b80821115620006775760008155600101620006d4565b80516001600160a01b03811681146200070257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000748576200074862000707565b604052919050565b60005b838110156200076d57818101518382015260200162000753565b83811115620002625750506000910152565b600082601f8301126200079157600080fd5b81516001600160401b03811115620007ad57620007ad62000707565b620007c2601f8201601f19166020016200071d565b818152846020838601011115620007d857600080fd5b620007eb82602083016020870162000750565b949350505050565b600080600080600060a086880312156200080c57600080fd5b6200081786620006ea565b60208781015160408901519297509550906001600160401b03808211156200083e57600080fd5b6200084c8a838b016200077f565b955060608901519150808211156200086357600080fd5b620008718a838b016200077f565b945060808901519150808211156200088857600080fd5b818901915089601f8301126200089d57600080fd5b815181811115620008b257620008b262000707565b8060051b9150620008c58483016200071d565b818152918301840191848101908c841115620008e057600080fd5b938501935b838510156200090957620008f985620006ea565b82529385019390850190620008e5565b8096505050505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016200095d576200095d62000932565b5060010190565b600082198211156200097a576200097a62000932565b500190565b600081518084526200099981602086016020860162000750565b601f01601f19169290920160200192915050565b838152606060208201526000620009c860608301856200097f565b8281036040840152620009dc81856200097f565b9695505050505050565b600060208284031215620009f957600080fd5b62000a0482620006ea565b9392505050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c06080820181905260009062000a48908301856200097f565b82810360a084015262000a5c81856200097f565b9998505050505050505050565b600181811c9082168062000a7e57607f821691505b60208210810362000a9f57634e487b7160e01b600052602260045260246000fd5b50919050565b61197e8062000ab56000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c8063959b8c3f116100d8578063cfbfab0b1161008c578063fad8b32a11610066578063fad8b32a14610311578063fc673c4f14610324578063fe9d93031461033757600080fd5b8063cfbfab0b146102b2578063d95b6371146102c5578063dd62ed3e146102d857600080fd5b80639bd9bbc6116100bd5780639bd9bbc614610279578063a9059cbb1461028c578063b1f0b5be1461029f57600080fd5b8063959b8c3f1461025e57806395d89b411461027157600080fd5b8063313ce5671161012f57806356189cb41161011457806356189cb41461020d57806362ad1b831461022257806370a082311461023557600080fd5b8063313ce567146101f7578063556f0dc71461020657600080fd5b8063095ea7b311610160578063095ea7b3146101af57806318160ddd146101d257806323b872dd146101e457600080fd5b806306e485381461017c57806306fdde031461019a575b600080fd5b61018461034a565b60405161019191906113cf565b60405180910390f35b6101a26103ac565b6040516101919190611469565b6101c26101bd366004611494565b610435565b6040519015158152602001610191565b6001545b604051908152602001610191565b6101c26101f23660046114c0565b61044d565b60405160128152602001610191565b60016101d6565b61022061021b3660046114c0565b610493565b005b6102206102303660046115a4565b6104a3565b6101d6610243366004611637565b6001600160a01b031660009081526020819052604090205490565b61022061026c366004611637565b610529565b6101a2610646565b610220610287366004611654565b610655565b6101c261029a366004611494565b610673565b6102206102ad3660046116ad565b6106ab565b6102206102c036600461172d565b6106bd565b6101c26102d33660046117c7565b6106ca565b6101d66102e63660046117c7565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b61022061031f366004611637565b61076c565b6102206103323660046116ad565b610887565b610220610345366004611800565b6108fe565b606060048054806020026020016040519081016040528092919081815260200182805480156103a257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610384575b5050505050905090565b6060600280546103bb90611847565b80601f01602080910402602001604051908101604052809291908181526020018280546103e790611847565b80156103a25780601f10610409576101008083540402835291602001916103a2565b820191906000526020600020905b81548152906001019060200180831161041757509395945050505050565b60003361044381858561092c565b5060019392505050565b60003361045b858285610a6b565b61048885858560405180602001604052806000815250604051806020016040528060008152506000610af7565b506001949350505050565b61049e83838361092c565b505050565b6104ad33866106ca565b6105135760405162461bcd60e51b815260206004820152602c60248201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60448201526b39103337b9103437b63232b960a11b60648201526084015b60405180910390fd5b61052285858585856001610af7565b5050505050565b6001600160a01b038116330361058d5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b606482015260840161050a565b6001600160a01b03811660009081526005602052604090205460ff16156105de573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561060d565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b6060600380546103bb90611847565b61049e33848484604051806020016040528060008152506001610af7565b60006106a233848460405180602001604052806000815250604051806020016040528060008152506000610af7565b50600192915050565b6106b784848484610c0a565b50505050565b6105228585858585610c14565b6000816001600160a01b0316836001600160a01b0316148061073557506001600160a01b03831660009081526005602052604090205460ff16801561073557506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061076557506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b336001600160a01b038216036107ce5760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b606482015260840161050a565b6001600160a01b03811660009081526005602052604090205460ff1615610822573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561084e565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61089133856106ca565b6108f25760405162461bcd60e51b815260206004820152602c60248201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60448201526b39103337b9103437b63232b960a11b606482015260840161050a565b6106b784848484610d66565b61091933838360405180602001604052806000815250610d66565b5050565b6001600160a01b03163b151590565b6001600160a01b0383166109a85760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161050a565b6001600160a01b038216610a0a5760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050a565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526008602090815260408083209386168352929052205460001981146106b75781811015610aea5760405162461bcd60e51b815260206004820152601e60248201527f4552433737373a20696e73756666696369656e7420616c6c6f77616e63650000604482015260640161050a565b6106b7848484840361092c565b6001600160a01b038616610b735760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161050a565b6001600160a01b038516610bd55760405162461bcd60e51b8152602060048201526024808201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161050a565b33610be4818888888888610f1c565b610bf2818888888888611043565b610c01818888888888886111cb565b50505050505050565b6106b78484848460015b6001600160a01b038516610c6a5760405162461bcd60e51b815260206004820181905260248201527f4552433737373a206d696e7420746f20746865207a65726f2061646472657373604482015260640161050a565b33610c7881600088886113a0565b8460016000828254610c8a9190611897565b90915550506001600160a01b03861660009081526020819052604081208054879290610cb7908490611897565b90915550610ccd905081600088888888886111cb565b856001600160a01b0316816001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d878787604051610d14939291906118af565b60405180910390a36040518581526001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a3505050505050565b6001600160a01b038416610dc75760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b606482015260840161050a565b33610dd781866000878787610f1c565b610de481866000876113a0565b6001600160a01b03851660009081526020819052604090205484811015610e595760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b606482015260840161050a565b6001600160a01b0386166000908152602081905260408120868303905560018054879290610e889084906118e4565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098878787604051610ed6939291906118af565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610d56565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc191906118fb565b90506001600160a01b03811615610c0157604051633ad5cbc160e11b81526001600160a01b038216906375ab978290611008908a908a908a908a908a908a90600401611918565b600060405180830381600087803b15801561102257600080fd5b505af1158015611036573d6000803e3d6000fd5b5050505050505050505050565b61104f868686866113a0565b6001600160a01b038516600090815260208190526040902054838110156110de5760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201527f62616c616e636500000000000000000000000000000000000000000000000000606482015260840161050a565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290611115908490611897565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc8261467798787878760405161116d939291906118af565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516111ba91815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa15801561124c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127091906118fb565b90506001600160a01b038116156112ec576040516223de2960e01b81526001600160a01b038216906223de29906112b5908b908b908b908b908b908b90600401611918565b600060405180830381600087803b1580156112cf57600080fd5b505af11580156112e3573d6000803e3d6000fd5b50505050611396565b8115611396576001600160a01b0386163b156113965760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201527f6b656e73526563697069656e7400000000000000000000000000000000000000608482015260a40161050a565b5050505050505050565b6040517f52316ab8e8b0687ce803e403dfe429541bccd4f6c4683ec65d254d382f15a26590600090a150505050565b6020808252825182820181905260009190848201906040850190845b818110156114105783516001600160a01b0316835292840192918401916001016113eb565b50909695505050505050565b6000815180845260005b8181101561144257602081850181015186830182015201611426565b81811115611454576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610765602083018461141c565b6001600160a01b038116811461149157600080fd5b50565b600080604083850312156114a757600080fd5b82356114b28161147c565b946020939093013593505050565b6000806000606084860312156114d557600080fd5b83356114e08161147c565b925060208401356114f08161147c565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261152857600080fd5b813567ffffffffffffffff8082111561154357611543611501565b604051601f8301601f19908116603f0116810190828211818310171561156b5761156b611501565b8160405283815286602085880101111561158457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156115bc57600080fd5b85356115c78161147c565b945060208601356115d78161147c565b935060408601359250606086013567ffffffffffffffff808211156115fb57600080fd5b61160789838a01611517565b9350608088013591508082111561161d57600080fd5b5061162a88828901611517565b9150509295509295909350565b60006020828403121561164957600080fd5b81356107658161147c565b60008060006060848603121561166957600080fd5b83356116748161147c565b925060208401359150604084013567ffffffffffffffff81111561169757600080fd5b6116a386828701611517565b9150509250925092565b600080600080608085870312156116c357600080fd5b84356116ce8161147c565b935060208501359250604085013567ffffffffffffffff808211156116f257600080fd5b6116fe88838901611517565b9350606087013591508082111561171457600080fd5b5061172187828801611517565b91505092959194509250565b600080600080600060a0868803121561174557600080fd5b85356117508161147c565b945060208601359350604086013567ffffffffffffffff8082111561177457600080fd5b61178089838a01611517565b9450606088013591508082111561179657600080fd5b506117a388828901611517565b925050608086013580151581146117b957600080fd5b809150509295509295909350565b600080604083850312156117da57600080fd5b82356117e58161147c565b915060208301356117f58161147c565b809150509250929050565b6000806040838503121561181357600080fd5b82359150602083013567ffffffffffffffff81111561183157600080fd5b61183d85828601611517565b9150509250929050565b600181811c9082168061185b57607f821691505b60208210810361187b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156118aa576118aa611881565b500190565b8381526060602082015260006118c8606083018561141c565b82810360408401526118da818561141c565b9695505050505050565b6000828210156118f6576118f6611881565b500390565b60006020828403121561190d57600080fd5b81516107658161147c565b60006001600160a01b038089168352808816602084015280871660408401525084606083015260c0608083015261195260c083018561141c565b82810360a0840152611964818561141c565b999850505050505050505056fea164736f6c634300080d000a";

type ERC777MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC777MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC777Mock__factory extends ContractFactory {
  constructor(...args: ERC777MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialHolder: string,
    initialBalance: BigNumberish,
    name: string,
    symbol: string,
    defaultOperators: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC777Mock> {
    return super.deploy(
      initialHolder,
      initialBalance,
      name,
      symbol,
      defaultOperators,
      overrides || {}
    ) as Promise<ERC777Mock>;
  }
  override getDeployTransaction(
    initialHolder: string,
    initialBalance: BigNumberish,
    name: string,
    symbol: string,
    defaultOperators: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialHolder,
      initialBalance,
      name,
      symbol,
      defaultOperators,
      overrides || {}
    );
  }
  override attach(address: string): ERC777Mock {
    return super.attach(address) as ERC777Mock;
  }
  override connect(signer: Signer): ERC777Mock__factory {
    return super.connect(signer) as ERC777Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC777MockInterface {
    return new utils.Interface(_abi) as ERC777MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC777Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC777Mock;
  }
}
