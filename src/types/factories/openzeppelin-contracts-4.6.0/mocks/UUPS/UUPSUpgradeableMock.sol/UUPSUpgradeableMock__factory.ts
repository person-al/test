/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UUPSUpgradeableMock,
  UUPSUpgradeableMockInterface,
} from "../../../../../openzeppelin-contracts-4.6.0/mocks/UUPS/UUPSUpgradeableMock.sol/UUPSUpgradeableMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "current",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051610b5461004c6000396000818161013b015281816101c5015281816102b20152818161033701526104180152610b546000f3fe6080604052600436106100705760003560e01c806352d1902d1161004e57806352d1902d146100bf5780639fa6a6e3146100e6578063d09de08a146100fb578063d826f88f1461011057600080fd5b80632baeceb7146100755780633659cfe61461008c5780634f1ef286146100ac575b600080fd5b34801561008157600080fd5b5061008a610125565b005b34801561009857600080fd5b5061008a6100a7366004610999565b610131565b61008a6100ba3660046109ca565b6102a8565b3480156100cb57600080fd5b506100d461040b565b60405190815260200160405180910390f35b3480156100f257600080fd5b506000546100d4565b34801561010757600080fd5b5061008a6104d0565b34801561011c57600080fd5b5061008a6104de565b61012f60006104e7565b565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101c35760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661021e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146102895760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016101ba565b604080516000808252602082019092526102a59183919061053e565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103355760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016101ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103907f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146103fb5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016101ba565b6104078282600161053e565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104ab5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016101ba565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61012f600080546001019055565b61012f60008055565b8054806105365760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016101ba565b600019019055565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561057657610571836106e3565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156105d0575060408051601f3d908101601f191682019092526105cd91810190610a8c565b60015b6106425760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016101ba565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146106d75760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016101ba565b506105718383836107b9565b6001600160a01b0381163b6107605760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016101ba565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6107c2836107e4565b6000825111806107cf5750805b15610571576107de8383610824565b50505050565b6107ed816106e3565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606108498383604051806060016040528060278152602001610b2160279139610850565b9392505050565b60606001600160a01b0384163b6108cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016101ba565b600080856001600160a01b0316856040516108ea9190610ad1565b600060405180830381855af49150503d8060008114610925576040519150601f19603f3d011682016040523d82523d6000602084013e61092a565b606091505b509150915061093a828286610944565b9695505050505050565b60608315610953575081610849565b8251156109635782518084602001fd5b8160405162461bcd60e51b81526004016101ba9190610aed565b80356001600160a01b038116811461099457600080fd5b919050565b6000602082840312156109ab57600080fd5b6108498261097d565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156109dd57600080fd5b6109e68361097d565b9150602083013567ffffffffffffffff80821115610a0357600080fd5b818501915085601f830112610a1757600080fd5b813581811115610a2957610a296109b4565b604051601f8201601f19908116603f01168101908382118183101715610a5157610a516109b4565b81604052828152886020848701011115610a6a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600060208284031215610a9e57600080fd5b5051919050565b60005b83811015610ac0578181015183820152602001610aa8565b838111156107de5750506000910152565b60008251610ae3818460208701610aa5565b9190910192915050565b6020815260008251806020840152610b0c816040850160208701610aa5565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080d000a";

type UUPSUpgradeableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UUPSUpgradeableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UUPSUpgradeableMock__factory extends ContractFactory {
  constructor(...args: UUPSUpgradeableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UUPSUpgradeableMock> {
    return super.deploy(overrides || {}) as Promise<UUPSUpgradeableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UUPSUpgradeableMock {
    return super.attach(address) as UUPSUpgradeableMock;
  }
  override connect(signer: Signer): UUPSUpgradeableMock__factory {
    return super.connect(signer) as UUPSUpgradeableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UUPSUpgradeableMockInterface {
    return new utils.Interface(_abi) as UUPSUpgradeableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSUpgradeableMock {
    return new Contract(address, _abi, signerOrProvider) as UUPSUpgradeableMock;
  }
}
