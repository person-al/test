/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155SupplyMock,
  ERC1155SupplyMockInterface,
} from "../../../openzeppelin-contracts-4.6.0/mocks/ERC1155SupplyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200236b3803806200236b83398101604081905262000034916200011f565b808062000041816200004a565b50505062000237565b80516200005f90600290602084019062000063565b5050565b8280546200007190620001fb565b90600052602060002090601f016020900481019282620000955760008555620000e0565b82601f10620000b057805160ff1916838001178555620000e0565b82800160010185558215620000e0579182015b82811115620000e0578251825591602001919060010190620000c3565b50620000ee929150620000f2565b5090565b5b80821115620000ee5760008155600101620000f3565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b818501915085601f8301126200016057600080fd5b81518181111562000175576200017562000109565b604051601f8201601f19908116603f01168101908382118183101715620001a057620001a062000109565b816040528281528886848701011115620001b957600080fd5b600093505b82841015620001dd5784840186015181850187015292850192620001be565b82841115620001ef5760008684830101525b98975050505050505050565b600181811c908216806200021057607f821691505b6020821081036200023157634e487b7160e01b600052602260045260246000fd5b50919050565b61212480620002476000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80634f558e7911610097578063bd85b03911610066578063bd85b03914610218578063e985e9c514610238578063f242432a14610274578063f5298aca1461028757600080fd5b80634f558e79146101bd5780636b20c454146101df578063731133e9146101f2578063a22cb4651461020557600080fd5b80630e89341c116100d35780630e89341c146101575780631f7fdffa146101775780632eb2c2d61461018a5780634e1273f41461019d57600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806302fe530514610142575b600080fd5b61010c61010736600461183e565b61029a565b6040519081526020015b60405180910390f35b61013261012d36600461187e565b610343565b6040519015158152602001610116565b610155610150366004611943565b610395565b005b61016a610165366004611994565b6103a1565b60405161011691906119fa565b610155610185366004611ac2565b610435565b610155610198366004611b5b565b610447565b6101b06101ab366004611c05565b6104e9565b6040516101169190611d0b565b6101326101cb366004611994565b600090815260036020526040902054151590565b6101556101ed366004611d1e565b610627565b610155610200366004611d92565b610637565b610155610213366004611de7565b610643565b61010c610226366004611994565b60009081526003602052604090205490565b610132610246366004611e23565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610155610282366004611e56565b610652565b610155610295366004611ebb565b6106ed565b60006001600160a01b03831661031d5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061037457506001600160e01b031982166303a24d0760e21b145b8061038f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b61039e816106f8565b50565b6060600280546103b090611eee565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc90611eee565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b50505050509050919050565b6104418484848461070b565b50505050565b6001600160a01b03851633148061046357506104638533610246565b6104d55760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610314565b6104e285858585856108e0565b5050505050565b606081518351146105625760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610314565b6000835167ffffffffffffffff81111561057e5761057e6118a2565b6040519080825280602002602001820160405280156105a7578160200160208202803683370190505b50905060005b845181101561061f576105f28582815181106105cb576105cb611f28565b60200260200101518583815181106105e5576105e5611f28565b602002602001015161029a565b82828151811061060457610604611f28565b602090810291909101015261061881611f54565b90506105ad565b509392505050565b610632838383610b4c565b505050565b61044184848484610da1565b61064e338383610ec4565b5050565b6001600160a01b03851633148061066e575061066e8533610246565b6106e05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610314565b6104e28585858585610fb8565b610632838383611171565b805161064e906002906020840190611789565b6001600160a01b03841661076b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610314565b81518351146107cd5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610314565b336107dd81600087878787611301565b60005b8451811015610878578381815181106107fb576107fb611f28565b602002602001015160008087848151811061081857610818611f28565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546108609190611f6d565b9091555081905061087081611f54565b9150506107e0565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108c9929190611f85565b60405180910390a46104e28160008787878761130f565b81518351146109425760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610314565b6001600160a01b0384166109a65760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610314565b336109b5818787878787611301565b60005b8451811015610ade5760008582815181106109d5576109d5611f28565b6020026020010151905060008583815181106109f3576109f3611f28565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610a865760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610314565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610ac3908490611f6d565b9250508190555050505080610ad790611f54565b90506109b8565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b2e929190611f85565b60405180910390a4610b4481878787878761130f565b505050505050565b6001600160a01b038316610bae5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610314565b8051825114610c105760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610314565b6000339050610c3381856000868660405180602001604052806000815250611301565b60005b8351811015610d34576000848281518110610c5357610c53611f28565b602002602001015190506000848381518110610c7157610c71611f28565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610cfd5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610314565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610d2c81611f54565b915050610c36565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610d85929190611f85565b60405180910390a4604080516020810190915260009052610441565b6001600160a01b038416610e015760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610314565b336000610e0d856114b4565b90506000610e1a856114b4565b9050610e2b83600089858589611301565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290610e5b908490611f6d565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ebb836000898989896114ff565b50505050505050565b816001600160a01b0316836001600160a01b031603610f4b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610314565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661101c5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610314565b336000611028856114b4565b90506000611035856114b4565b9050611045838989858589611301565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156110c95760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610314565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611106908490611f6d565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611166848a8a8a8a8a6114ff565b505050505050505050565b6001600160a01b0383166111d35760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610314565b3360006111df846114b4565b905060006111ec846114b4565b905061120c83876000858560405180602001604052806000815250611301565b6000858152602081815260408083206001600160a01b038a168452909152902054848110156112895760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610314565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610ebb565b610b448686868686866115fb565b6001600160a01b0384163b15610b445760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906113539089908990889088908890600401611fb3565b6020604051808303816000875af192505050801561138e575060408051601f3d908101601f1916820190925261138b91810190612011565b60015b6114435761139a61202e565b806308c379a0036113d357506113ae61204a565b806113b957506113d5565b8060405162461bcd60e51b815260040161031491906119fa565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610314565b6001600160e01b0319811663bc197c8160e01b14610ebb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610314565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106114ee576114ee611f28565b602090810291909101015292915050565b6001600160a01b0384163b15610b445760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061154390899089908890889088906004016120d4565b6020604051808303816000875af192505050801561157e575060408051601f3d908101601f1916820190925261157b91810190612011565b60015b61158a5761139a61202e565b6001600160e01b0319811663f23a6e6160e01b14610ebb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610314565b6001600160a01b0385166116825760005b83518110156116805782818151811061162757611627611f28565b60200260200101516003600086848151811061164557611645611f28565b60200260200101518152602001908152602001600020600082825461166a9190611f6d565b90915550611679905081611f54565b905061160c565b505b6001600160a01b038416610b445760005b8351811015610ebb5760008482815181106116b0576116b0611f28565b6020026020010151905060008483815181106116ce576116ce611f28565b60200260200101519050600060036000848152602001908152602001600020549050818110156117665760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c790000000000000000000000000000000000000000000000006064820152608401610314565b6000928352600360205260409092209103905561178281611f54565b9050611693565b82805461179590611eee565b90600052602060002090601f0160209004810192826117b757600085556117fd565b82601f106117d057805160ff19168380011785556117fd565b828001600101855582156117fd579182015b828111156117fd5782518255916020019190600101906117e2565b5061180992915061180d565b5090565b5b80821115611809576000815560010161180e565b80356001600160a01b038116811461183957600080fd5b919050565b6000806040838503121561185157600080fd5b61185a83611822565b946020939093013593505050565b6001600160e01b03198116811461039e57600080fd5b60006020828403121561189057600080fd5b813561189b81611868565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156118de576118de6118a2565b6040525050565b600067ffffffffffffffff8311156118ff576118ff6118a2565b604051611916601f8501601f1916602001826118b8565b80915083815284848401111561192b57600080fd5b83836020830137600060208583010152509392505050565b60006020828403121561195557600080fd5b813567ffffffffffffffff81111561196c57600080fd5b8201601f8101841361197d57600080fd5b61198c848235602084016118e5565b949350505050565b6000602082840312156119a657600080fd5b5035919050565b6000815180845260005b818110156119d3576020818501810151868301820152016119b7565b818111156119e5576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061189b60208301846119ad565b600067ffffffffffffffff821115611a2757611a276118a2565b5060051b60200190565b600082601f830112611a4257600080fd5b81356020611a4f82611a0d565b604051611a5c82826118b8565b83815260059390931b8501820192828101915086841115611a7c57600080fd5b8286015b84811015611a975780358352918301918301611a80565b509695505050505050565b600082601f830112611ab357600080fd5b61189b838335602085016118e5565b60008060008060808587031215611ad857600080fd5b611ae185611822565b9350602085013567ffffffffffffffff80821115611afe57600080fd5b611b0a88838901611a31565b94506040870135915080821115611b2057600080fd5b611b2c88838901611a31565b93506060870135915080821115611b4257600080fd5b50611b4f87828801611aa2565b91505092959194509250565b600080600080600060a08688031215611b7357600080fd5b611b7c86611822565b9450611b8a60208701611822565b9350604086013567ffffffffffffffff80821115611ba757600080fd5b611bb389838a01611a31565b94506060880135915080821115611bc957600080fd5b611bd589838a01611a31565b93506080880135915080821115611beb57600080fd5b50611bf888828901611aa2565b9150509295509295909350565b60008060408385031215611c1857600080fd5b823567ffffffffffffffff80821115611c3057600080fd5b818501915085601f830112611c4457600080fd5b81356020611c5182611a0d565b604051611c5e82826118b8565b83815260059390931b8501820192828101915089841115611c7e57600080fd5b948201945b83861015611ca357611c9486611822565b82529482019490820190611c83565b96505086013592505080821115611cb957600080fd5b50611cc685828601611a31565b9150509250929050565b600081518084526020808501945080840160005b83811015611d0057815187529582019590820190600101611ce4565b509495945050505050565b60208152600061189b6020830184611cd0565b600080600060608486031215611d3357600080fd5b611d3c84611822565b9250602084013567ffffffffffffffff80821115611d5957600080fd5b611d6587838801611a31565b93506040860135915080821115611d7b57600080fd5b50611d8886828701611a31565b9150509250925092565b60008060008060808587031215611da857600080fd5b611db185611822565b93506020850135925060408501359150606085013567ffffffffffffffff811115611ddb57600080fd5b611b4f87828801611aa2565b60008060408385031215611dfa57600080fd5b611e0383611822565b915060208301358015158114611e1857600080fd5b809150509250929050565b60008060408385031215611e3657600080fd5b611e3f83611822565b9150611e4d60208401611822565b90509250929050565b600080600080600060a08688031215611e6e57600080fd5b611e7786611822565b9450611e8560208701611822565b93506040860135925060608601359150608086013567ffffffffffffffff811115611eaf57600080fd5b611bf888828901611aa2565b600080600060608486031215611ed057600080fd5b611ed984611822565b95602085013595506040909401359392505050565b600181811c90821680611f0257607f821691505b602082108103611f2257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611f6657611f66611f3e565b5060010190565b60008219821115611f8057611f80611f3e565b500190565b604081526000611f986040830185611cd0565b8281036020840152611faa8185611cd0565b95945050505050565b60006001600160a01b03808816835280871660208401525060a06040830152611fdf60a0830186611cd0565b8281036060840152611ff18186611cd0565b9050828103608084015261200581856119ad565b98975050505050505050565b60006020828403121561202357600080fd5b815161189b81611868565b600060033d11156120475760046000803e5060005160e01c5b90565b600060443d10156120585790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561208857505050505090565b82850191508151818111156120a05750505050505090565b843d87010160208285010111156120ba5750505050505090565b6120c9602082860101876118b8565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261210c60a08301846119ad565b97965050505050505056fea164736f6c634300080d000a";

type ERC1155SupplyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155SupplyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155SupplyMock__factory extends ContractFactory {
  constructor(...args: ERC1155SupplyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155SupplyMock> {
    return super.deploy(uri, overrides || {}) as Promise<ERC1155SupplyMock>;
  }
  override getDeployTransaction(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri, overrides || {});
  }
  override attach(address: string): ERC1155SupplyMock {
    return super.attach(address) as ERC1155SupplyMock;
  }
  override connect(signer: Signer): ERC1155SupplyMock__factory {
    return super.connect(signer) as ERC1155SupplyMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155SupplyMockInterface {
    return new utils.Interface(_abi) as ERC1155SupplyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155SupplyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155SupplyMock;
  }
}
