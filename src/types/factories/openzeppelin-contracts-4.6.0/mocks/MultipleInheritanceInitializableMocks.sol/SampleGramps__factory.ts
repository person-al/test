/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SampleGramps,
  SampleGrampsInterface,
} from "../../../../openzeppelin-contracts-4.6.0/mocks/MultipleInheritanceInitializableMocks.sol/SampleGramps";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "gramps",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610724806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a6c9db6146100515780638129fc1c14610079578063f62d188814610083578063fa39851f14610096575b600080fd5b6000546100649062010000900460ff1681565b60405190151581526020015b60405180910390f35b6100816100ab565b005b6100816100913660046105d7565b610120565b61009e610197565b6040516100709190610688565b60006100b76001610225565b905080156100cf576000805461ff0019166101001790555b6100d7610340565b801561011d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600061012c6001610225565b90508015610144576000805461ff0019166101001790555b61014d826103b5565b8015610193576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600180546101a4906106dd565b80601f01602080910402602001604051908101604052809291908181526020018280546101d0906106dd565b801561021d5780601f106101f25761010080835404028352916020019161021d565b820191906000526020600020905b81548152906001019060200180831161020057829003601f168201915b505050505081565b60008054610100900460ff16156102b8578160ff1660011480156102485750303b155b6102b05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff8084169116106103265760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102a7565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166103ab5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016102a7565b6103b3610431565b565b600054610100900460ff166104205760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016102a7565b610428610340565b61011d816104af565b600054610100900460ff1661049c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016102a7565b6000805462ff0000191662010000179055565b600054610100900460ff1661051a5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016102a7565b8051610193906001906020840190828054610534906106dd565b90600052602060002090601f016020900481019282610556576000855561059c565b82601f1061056f57805160ff191683800117855561059c565b8280016001018555821561059c579182015b8281111561059c578251825591602001919060010190610581565b506105a89291506105ac565b5090565b5b808211156105a857600081556001016105ad565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105e957600080fd5b813567ffffffffffffffff8082111561060157600080fd5b818401915084601f83011261061557600080fd5b813581811115610627576106276105c1565b604051601f8201601f19908116603f0116810190838211818310171561064f5761064f6105c1565b8160405282815287602084870101111561066857600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156106b557858101830151858201604001528201610699565b818111156106c7576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c908216806106f157607f821691505b60208210810361071157634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c634300080d000a";

type SampleGrampsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleGrampsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleGramps__factory extends ContractFactory {
  constructor(...args: SampleGrampsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SampleGramps> {
    return super.deploy(overrides || {}) as Promise<SampleGramps>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SampleGramps {
    return super.attach(address) as SampleGramps;
  }
  override connect(signer: Signer): SampleGramps__factory {
    return super.connect(signer) as SampleGramps__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleGrampsInterface {
    return new utils.Interface(_abi) as SampleGrampsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SampleGramps {
    return new Contract(address, _abi, signerOrProvider) as SampleGramps;
  }
}
