/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConstructorInitializableMock,
  ConstructorInitializableMockInterface,
} from "../../../../openzeppelin-contracts-4.6.0/mocks/InitializableMock.sol/ConstructorInitializableMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeOnlyInitializing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializerRan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onlyInitializingRan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001d600161007f565b90508015610035576000805461ff0019166101001790555b61003d610187565b6100456101f3565b8015610079576000805461ff0019169055604051600181526000805160206105a38339815191529060200160405180910390a15b50610282565b60008054610100900460ff1615610111578160ff1660011480156100b357506100b13061027360201b6101b31760201c565b155b6101095760405162461bcd60e51b815260206004820152602e602482015260008051602061058383398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff80841691161061016d5760405162461bcd60e51b815260206004820152602e602482015260008051602061058383398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610100565b506000805460ff191660ff92909216919091179055600190565b6000610193600161007f565b905080156101ab576000805461ff0019166101001790555b6000805462ff000019166201000017905580156101f0576000805461ff0019169055604051600181526000805160206105a38339815191529060200160405180910390a15b50565b600054610100900460ff1661025e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610100565b6000805463ff00000019166301000000179055565b6001600160a01b03163b151590565b6102f2806102916000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806310065ed2146100515780637cffe97a1461005b5780638129fc1c14610083578063c3b8ef2a1461008b575b600080fd5b61005961009e565b005b60005461006f906301000000900460ff1681565b604051901515815260200160405180910390f35b610059610135565b60005461006f9062010000900460ff1681565b600054610100900460ff166101205760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805463ff00000019166301000000179055565b600061014160016101cf565b90508015610159576000805461ff0019166101001790555b6000805462ff000019166201000017905580156101b0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60008054610100900460ff161561025d578160ff1660011480156101f25750303b155b6102555760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610117565b506000919050565b60005460ff8084169116106102cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610117565b506000805460ff191660ff9290921691909117905560019056fea164736f6c634300080d000a496e697469616c697a61626c653a20636f6e747261637420697320616c7265617f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498";

type ConstructorInitializableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstructorInitializableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConstructorInitializableMock__factory extends ContractFactory {
  constructor(...args: ConstructorInitializableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConstructorInitializableMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ConstructorInitializableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConstructorInitializableMock {
    return super.attach(address) as ConstructorInitializableMock;
  }
  override connect(signer: Signer): ConstructorInitializableMock__factory {
    return super.connect(signer) as ConstructorInitializableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstructorInitializableMockInterface {
    return new utils.Interface(_abi) as ConstructorInitializableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConstructorInitializableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConstructorInitializableMock;
  }
}
