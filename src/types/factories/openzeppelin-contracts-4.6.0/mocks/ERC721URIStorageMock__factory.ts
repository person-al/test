/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721URIStorageMock,
  ERC721URIStorageMockInterface,
} from "../../../openzeppelin-contracts-4.6.0/mocks/ERC721URIStorageMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ecc38038062001ecc8339810160408190526200003491620001e1565b8151829082906200004d9060009060208501906200006e565b508051620000639060019060208401906200006e565b505050505062000287565b8280546200007c906200024b565b90600052602060002090601f016020900481019282620000a05760008555620000eb565b82601f10620000bb57805160ff1916838001178555620000eb565b82800160010185558215620000eb579182015b82811115620000eb578251825591602001919060010190620000ce565b50620000f9929150620000fd565b5090565b5b80821115620000f95760008155600101620000fe565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013c57600080fd5b81516001600160401b038082111562000159576200015962000114565b604051601f8301601f19908116603f0116810190828211818310171562000184576200018462000114565b81604052838152602092508683858801011115620001a157600080fd5b600091505b83821015620001c55785820183015181830184015290820190620001a6565b83821115620001d75760008385830101525b9695505050505050565b60008060408385031215620001f557600080fd5b82516001600160401b03808211156200020d57600080fd5b6200021b868387016200012a565b935060208501519150808211156200023257600080fd5b5062000241858286016200012a565b9150509250929050565b600181811c908216806200026057607f821691505b6020821081036200028157634e487b7160e01b600052602260045260246000fd5b50919050565b611c3580620002976000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806355f804b3116100d857806395d89b411161008c578063b88d4fde11610066578063b88d4fde146102fb578063c87b56dd1461030e578063e985e9c51461032157600080fd5b806395d89b41146102cd578063a1448194146102d5578063a22cb465146102e857600080fd5b80636c0360eb116100bd5780636c0360eb1461029157806370a08231146102995780638832e6e3146102ba57600080fd5b806355f804b31461026b5780636352211e1461027e57600080fd5b806323b872dd1161012f57806342842e0e1161011457806342842e0e1461023257806342966c68146102455780634f558e791461025857600080fd5b806323b872dd1461020c57806340c10f191461021f57600080fd5b8063081812fc11610160578063081812fc146101b9578063095ea7b3146101e4578063162094c4146101f957600080fd5b806301ffc9a71461017c57806306fdde03146101a4575b600080fd5b61018f61018a3660046116cf565b61035d565b60405190151581526020015b60405180910390f35b6101ac6103af565b60405161019b9190611744565b6101cc6101c7366004611757565b610441565b6040516001600160a01b03909116815260200161019b565b6101f76101f236600461178c565b6104db565b005b6101f7610207366004611842565b6105f0565b6101f761021a36600461189d565b6105fe565b6101f761022d36600461178c565b610685565b6101f761024036600461189d565b61068f565b6101f7610253366004611757565b6106aa565b61018f610266366004611757565b6106b6565b6101f76102793660046118d9565b6106d5565b6101cc61028c366004611757565b6106e1565b6101ac61076c565b6102ac6102a736600461194b565b61077b565b60405190815260200161019b565b6101f76102c8366004611986565b610815565b6101ac610820565b6101f76102e336600461178c565b61082f565b6101f76102f63660046119dd565b610839565b6101f7610309366004611a19565b610844565b6101ac61031c366004611757565b6108d2565b61018f61032f366004611a81565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061038e57506001600160e01b03198216635b5e139f60e01b145b806103a957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103be90611ab4565b80601f01602080910402602001604051908101604052809291908181526020018280546103ea90611ab4565b80156104375780601f1061040c57610100808354040283529160200191610437565b820191906000526020600020905b81548152906001019060200180831161041a57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104bf5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104e6826106e1565b9050806001600160a01b0316836001600160a01b0316036105535760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104b6565b336001600160a01b038216148061056f575061056f813361032f565b6105e15760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104b6565b6105eb8383610a57565b505050565b6105fa8282610ac5565b5050565b6106083382610b6e565b61067a5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104b6565b6105eb838383610c64565b6105fa8282610e18565b6105eb83838360405180602001604052806000815250610844565b6106b381610f5a565b50565b6000818152600260205260408120546001600160a01b031615156103a9565b6105eb60078383611576565b6000818152600260205260408120546001600160a01b0316806103a95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104b6565b6060610776610f9a565b905090565b60006001600160a01b0382166107f95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104b6565b506001600160a01b031660009081526003602052604090205490565b6105eb838383610fa9565b6060600180546103be90611ab4565b6105fa8282611027565b6105fa338383611041565b61084e3383610b6e565b6108c05760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104b6565b6108cc8484848461110f565b50505050565b6000818152600260205260409020546060906001600160a01b031661095f5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016104b6565b6000828152600660205260408120805461097890611ab4565b80601f01602080910402602001604051908101604052809291908181526020018280546109a490611ab4565b80156109f15780601f106109c6576101008083540402835291602001916109f1565b820191906000526020600020905b8154815290600101906020018083116109d457829003601f168201915b505050505090506000610a02610f9a565b90508051600003610a14575092915050565b815115610a46578082604051602001610a2e929190611aee565b60405160208183030381529060405292505050919050565b610a4f8461118d565b949350505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a8c826106e1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000828152600260205260409020546001600160a01b0316610b4f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016104b6565b600082815260066020908152604090912082516105eb928401906115fa565b6000818152600260205260408120546001600160a01b0316610be75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104b6565b6000610bf2836106e1565b9050806001600160a01b0316846001600160a01b03161480610c3957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a4f5750836001600160a01b0316610c5284610441565b6001600160a01b031614949350505050565b826001600160a01b0316610c77826106e1565b6001600160a01b031614610cf35760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104b6565b6001600160a01b038216610d555760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104b6565b610d60600082610a57565b6001600160a01b0383166000908152600360205260408120805460019290610d89908490611b33565b90915550506001600160a01b0382166000908152600360205260408120805460019290610db7908490611b4a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610e6e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104b6565b6000818152600260205260409020546001600160a01b031615610ed35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104b6565b6001600160a01b0382166000908152600360205260408120805460019290610efc908490611b4a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610f6381611276565b60008181526006602052604090208054610f7c90611ab4565b1590506106b35760008181526006602052604081206106b39161166e565b6060600780546103be90611ab4565b610fb38383610e18565b610fc06000848484611311565b6105eb5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104b6565b6105fa828260405180602001604052806000815250610fa9565b816001600160a01b0316836001600160a01b0316036110a25760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104b6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61111a848484610c64565b61112684848484611311565b6108cc5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104b6565b6000818152600260205260409020546060906001600160a01b031661121a5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104b6565b6000611224610f9a565b90506000815111611244576040518060200160405280600081525061126f565b8061124e8461145d565b60405160200161125f929190611aee565b6040516020818303038152906040525b9392505050565b6000611281826106e1565b905061128e600083610a57565b6001600160a01b03811660009081526003602052604081208054600192906112b7908490611b33565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b1561145257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611355903390899088908890600401611b62565b6020604051808303816000875af1925050508015611390575060408051601f3d908101601f1916820190925261138d91810190611b9e565b60015b611438573d8080156113be576040519150601f19603f3d011682016040523d82523d6000602084013e6113c3565b606091505b5080516000036114305760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104b6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a4f565b506001949350505050565b6060816000036114845750506040805180820190915260018152600360fc1b602082015290565b8160005b81156114ae578061149881611bbb565b91506114a79050600a83611bea565b9150611488565b60008167ffffffffffffffff8111156114c9576114c96117b6565b6040519080825280601f01601f1916602001820160405280156114f3576020820181803683370190505b5090505b8415610a4f57611508600183611b33565b9150611515600a86611bfe565b611520906030611b4a565b60f81b81838151811061153557611535611c12565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061156f600a86611bea565b94506114f7565b82805461158290611ab4565b90600052602060002090601f0160209004810192826115a457600085556115ea565b82601f106115bd5782800160ff198235161785556115ea565b828001600101855582156115ea579182015b828111156115ea5782358255916020019190600101906115cf565b506115f69291506116a4565b5090565b82805461160690611ab4565b90600052602060002090601f01602090048101928261162857600085556115ea565b82601f1061164157805160ff19168380011785556115ea565b828001600101855582156115ea579182015b828111156115ea578251825591602001919060010190611653565b50805461167a90611ab4565b6000825580601f1061168a575050565b601f0160209004906000526020600020908101906106b391905b5b808211156115f657600081556001016116a5565b6001600160e01b0319811681146106b357600080fd5b6000602082840312156116e157600080fd5b813561126f816116b9565b60005b838110156117075781810151838201526020016116ef565b838111156108cc5750506000910152565b600081518084526117308160208601602086016116ec565b601f01601f19169290920160200192915050565b60208152600061126f6020830184611718565b60006020828403121561176957600080fd5b5035919050565b80356001600160a01b038116811461178757600080fd5b919050565b6000806040838503121561179f57600080fd5b6117a883611770565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156117e7576117e76117b6565b604051601f8501601f19908116603f0116810190828211818310171561180f5761180f6117b6565b8160405280935085815286868601111561182857600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561185557600080fd5b82359150602083013567ffffffffffffffff81111561187357600080fd5b8301601f8101851361188457600080fd5b611893858235602084016117cc565b9150509250929050565b6000806000606084860312156118b257600080fd5b6118bb84611770565b92506118c960208501611770565b9150604084013590509250925092565b600080602083850312156118ec57600080fd5b823567ffffffffffffffff8082111561190457600080fd5b818501915085601f83011261191857600080fd5b81358181111561192757600080fd5b86602082850101111561193957600080fd5b60209290920196919550909350505050565b60006020828403121561195d57600080fd5b61126f82611770565b600082601f83011261197757600080fd5b61126f838335602085016117cc565b60008060006060848603121561199b57600080fd5b6119a484611770565b925060208401359150604084013567ffffffffffffffff8111156119c757600080fd5b6119d386828701611966565b9150509250925092565b600080604083850312156119f057600080fd5b6119f983611770565b915060208301358015158114611a0e57600080fd5b809150509250929050565b60008060008060808587031215611a2f57600080fd5b611a3885611770565b9350611a4660208601611770565b925060408501359150606085013567ffffffffffffffff811115611a6957600080fd5b611a7587828801611966565b91505092959194509250565b60008060408385031215611a9457600080fd5b611a9d83611770565b9150611aab60208401611770565b90509250929050565b600181811c90821680611ac857607f821691505b602082108103611ae857634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611b008184602088016116ec565b835190830190611b148183602088016116ec565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611b4557611b45611b1d565b500390565b60008219821115611b5d57611b5d611b1d565b500190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611b946080830184611718565b9695505050505050565b600060208284031215611bb057600080fd5b815161126f816116b9565b600060018201611bcd57611bcd611b1d565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611bf957611bf9611bd4565b500490565b600082611c0d57611c0d611bd4565b500690565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300080d000a";

type ERC721URIStorageMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721URIStorageMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721URIStorageMock__factory extends ContractFactory {
  constructor(...args: ERC721URIStorageMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721URIStorageMock> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<ERC721URIStorageMock>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC721URIStorageMock {
    return super.attach(address) as ERC721URIStorageMock;
  }
  override connect(signer: Signer): ERC721URIStorageMock__factory {
    return super.connect(signer) as ERC721URIStorageMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721URIStorageMockInterface {
    return new utils.Interface(_abi) as ERC721URIStorageMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721URIStorageMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721URIStorageMock;
  }
}
