/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155Mock,
  ERC1155MockInterface,
} from "../../../openzeppelin-contracts-4.6.0/mocks/ERC1155Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021153803806200211583398101604081905262000034916200011d565b80620000408162000048565b505062000235565b80516200005d90600290602084019062000061565b5050565b8280546200006f90620001f9565b90600052602060002090601f016020900481019282620000935760008555620000de565b82601f10620000ae57805160ff1916838001178555620000de565b82800160010185558215620000de579182015b82811115620000de578251825591602001919060010190620000c1565b50620000ec929150620000f0565b5090565b5b80821115620000ec5760008155600101620000f1565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200013157600080fd5b82516001600160401b03808211156200014957600080fd5b818501915085601f8301126200015e57600080fd5b81518181111562000173576200017362000107565b604051601f8201601f19908116603f011681019083821181831017156200019e576200019e62000107565b816040528281528886848701011115620001b757600080fd5b600093505b82841015620001db5784840186015181850187015292850192620001bc565b82841115620001ed5760008684830101525b98975050505050505050565b600181811c908216806200020e57607f821691505b6020821081036200022f57634e487b7160e01b600052602260045260246000fd5b50919050565b611ed080620002456000396000f3fe608060405234801561001057600080fd5b50600436106100de5760003560e01c80634e1273f41161008c578063a22cb46511610066578063a22cb465146101cd578063e985e9c5146101e0578063f242432a1461021c578063f5298aca1461022f57600080fd5b80634e1273f4146101875780636b20c454146101a7578063731133e9146101ba57600080fd5b80630e89341c116100bd5780630e89341c146101415780631f7fdffa146101615780632eb2c2d61461017457600080fd5b8062fdd58e146100e357806301ffc9a71461010957806302fe53051461012c575b600080fd5b6100f66100f13660046115ea565b610242565b6040519081526020015b60405180910390f35b61011c61011736600461162a565b6102eb565b6040519015158152602001610100565b61013f61013a3660046116ef565b61033d565b005b61015461014f366004611740565b610349565b60405161010091906117a6565b61013f61016f36600461186e565b6103dd565b61013f610182366004611907565b6103ef565b61019a6101953660046119b1565b610491565b6040516101009190611ab7565b61013f6101b5366004611aca565b6105cf565b61013f6101c8366004611b3e565b6105df565b61013f6101db366004611b93565b6105eb565b61011c6101ee366004611bcf565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61013f61022a366004611c02565b6105fa565b61013f61023d366004611c67565b610695565b60006001600160a01b0383166102c55760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061031c57506001600160e01b031982166303a24d0760e21b145b8061033757506301ffc9a760e01b6001600160e01b03198316145b92915050565b610346816106a0565b50565b60606002805461035890611c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461038490611c9a565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b50505050509050919050565b6103e9848484846106b3565b50505050565b6001600160a01b03851633148061040b575061040b85336101ee565b61047d5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016102bc565b61048a8585858585610879565b5050505050565b6060815183511461050a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016102bc565b6000835167ffffffffffffffff8111156105265761052661164e565b60405190808252806020026020018201604052801561054f578160200160208202803683370190505b50905060005b84518110156105c75761059a85828151811061057357610573611cd4565b602002602001015185838151811061058d5761058d611cd4565b6020026020010151610242565b8282815181106105ac576105ac611cd4565b60209081029190910101526105c081611d00565b9050610555565b509392505050565b6105da838383610ad7565b505050565b6103e984848484610d1a565b6105f6338383610e2e565b5050565b6001600160a01b038516331480610616575061061685336101ee565b6106885760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016102bc565b61048a8585858585610f22565b6105da8383836110cd565b80516105f6906002906020840190611535565b6001600160a01b0384166107135760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102bc565b81518351146107755760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102bc565b3360005b84518110156108115783818151811061079457610794611cd4565b60200260200101516000808784815181106107b1576107b1611cd4565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546107f99190611d19565b9091555081905061080981611d00565b915050610779565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610862929190611d31565b60405180910390a461048a81600087878787611249565b81518351146108db5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102bc565b6001600160a01b03841661093f5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016102bc565b3360005b8451811015610a6957600085828151811061096057610960611cd4565b60200260200101519050600085838151811061097e5761097e611cd4565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610a115760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016102bc565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a4e908490611d19565b9250508190555050505080610a6290611d00565b9050610943565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610ab9929190611d31565b60405180910390a4610acf818787878787611249565b505050505050565b6001600160a01b038316610b395760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016102bc565b8051825114610b9b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102bc565b604080516020810190915260009081905233905b8351811015610cad576000848281518110610bcc57610bcc611cd4565b602002602001015190506000848381518110610bea57610bea611cd4565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610c765760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016102bc565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610ca581611d00565b915050610baf565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610cfe929190611d31565b60405180910390a46040805160208101909152600090526103e9565b6001600160a01b038416610d7a5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102bc565b336000610d86856113ee565b90506000610d93856113ee565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610dc5908490611d19565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e2583600089898989611439565b50505050505050565b816001600160a01b0316836001600160a01b031603610eb55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016102bc565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610f865760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016102bc565b336000610f92856113ee565b90506000610f9f856113ee565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156110255760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016102bc565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611062908490611d19565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46110c2848a8a8a8a8a611439565b505050505050505050565b6001600160a01b03831661112f5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016102bc565b33600061113b846113ee565b90506000611148846113ee565b60408051602080820183526000918290528882528181528282206001600160a01b038b16835290522054909150848110156111d15760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016102bc565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610e25565b6001600160a01b0384163b15610acf5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061128d9089908990889088908890600401611d5f565b6020604051808303816000875af19250505080156112c8575060408051601f3d908101601f191682019092526112c591810190611dbd565b60015b61137d576112d4611dda565b806308c379a00361130d57506112e8611df6565b806112f3575061130f565b8060405162461bcd60e51b81526004016102bc91906117a6565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016102bc565b6001600160e01b0319811663bc197c8160e01b14610e255760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016102bc565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061142857611428611cd4565b602090810291909101015292915050565b6001600160a01b0384163b15610acf5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061147d9089908990889088908890600401611e80565b6020604051808303816000875af19250505080156114b8575060408051601f3d908101601f191682019092526114b591810190611dbd565b60015b6114c4576112d4611dda565b6001600160e01b0319811663f23a6e6160e01b14610e255760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016102bc565b82805461154190611c9a565b90600052602060002090601f01602090048101928261156357600085556115a9565b82601f1061157c57805160ff19168380011785556115a9565b828001600101855582156115a9579182015b828111156115a957825182559160200191906001019061158e565b506115b59291506115b9565b5090565b5b808211156115b557600081556001016115ba565b80356001600160a01b03811681146115e557600080fd5b919050565b600080604083850312156115fd57600080fd5b611606836115ce565b946020939093013593505050565b6001600160e01b03198116811461034657600080fd5b60006020828403121561163c57600080fd5b813561164781611614565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561168a5761168a61164e565b6040525050565b600067ffffffffffffffff8311156116ab576116ab61164e565b6040516116c2601f8501601f191660200182611664565b8091508381528484840111156116d757600080fd5b83836020830137600060208583010152509392505050565b60006020828403121561170157600080fd5b813567ffffffffffffffff81111561171857600080fd5b8201601f8101841361172957600080fd5b61173884823560208401611691565b949350505050565b60006020828403121561175257600080fd5b5035919050565b6000815180845260005b8181101561177f57602081850181015186830182015201611763565b81811115611791576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006116476020830184611759565b600067ffffffffffffffff8211156117d3576117d361164e565b5060051b60200190565b600082601f8301126117ee57600080fd5b813560206117fb826117b9565b6040516118088282611664565b83815260059390931b850182019282810191508684111561182857600080fd5b8286015b84811015611843578035835291830191830161182c565b509695505050505050565b600082601f83011261185f57600080fd5b61164783833560208501611691565b6000806000806080858703121561188457600080fd5b61188d856115ce565b9350602085013567ffffffffffffffff808211156118aa57600080fd5b6118b6888389016117dd565b945060408701359150808211156118cc57600080fd5b6118d8888389016117dd565b935060608701359150808211156118ee57600080fd5b506118fb8782880161184e565b91505092959194509250565b600080600080600060a0868803121561191f57600080fd5b611928866115ce565b9450611936602087016115ce565b9350604086013567ffffffffffffffff8082111561195357600080fd5b61195f89838a016117dd565b9450606088013591508082111561197557600080fd5b61198189838a016117dd565b9350608088013591508082111561199757600080fd5b506119a48882890161184e565b9150509295509295909350565b600080604083850312156119c457600080fd5b823567ffffffffffffffff808211156119dc57600080fd5b818501915085601f8301126119f057600080fd5b813560206119fd826117b9565b604051611a0a8282611664565b83815260059390931b8501820192828101915089841115611a2a57600080fd5b948201945b83861015611a4f57611a40866115ce565b82529482019490820190611a2f565b96505086013592505080821115611a6557600080fd5b50611a72858286016117dd565b9150509250929050565b600081518084526020808501945080840160005b83811015611aac57815187529582019590820190600101611a90565b509495945050505050565b6020815260006116476020830184611a7c565b600080600060608486031215611adf57600080fd5b611ae8846115ce565b9250602084013567ffffffffffffffff80821115611b0557600080fd5b611b11878388016117dd565b93506040860135915080821115611b2757600080fd5b50611b34868287016117dd565b9150509250925092565b60008060008060808587031215611b5457600080fd5b611b5d856115ce565b93506020850135925060408501359150606085013567ffffffffffffffff811115611b8757600080fd5b6118fb8782880161184e565b60008060408385031215611ba657600080fd5b611baf836115ce565b915060208301358015158114611bc457600080fd5b809150509250929050565b60008060408385031215611be257600080fd5b611beb836115ce565b9150611bf9602084016115ce565b90509250929050565b600080600080600060a08688031215611c1a57600080fd5b611c23866115ce565b9450611c31602087016115ce565b93506040860135925060608601359150608086013567ffffffffffffffff811115611c5b57600080fd5b6119a48882890161184e565b600080600060608486031215611c7c57600080fd5b611c85846115ce565b95602085013595506040909401359392505050565b600181811c90821680611cae57607f821691505b602082108103611cce57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611d1257611d12611cea565b5060010190565b60008219821115611d2c57611d2c611cea565b500190565b604081526000611d446040830185611a7c565b8281036020840152611d568185611a7c565b95945050505050565b60006001600160a01b03808816835280871660208401525060a06040830152611d8b60a0830186611a7c565b8281036060840152611d9d8186611a7c565b90508281036080840152611db18185611759565b98975050505050505050565b600060208284031215611dcf57600080fd5b815161164781611614565b600060033d1115611df35760046000803e5060005160e01c5b90565b600060443d1015611e045790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611e3457505050505090565b8285019150815181811115611e4c5750505050505090565b843d8701016020828501011115611e665750505050505090565b611e7560208286010187611664565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152611eb860a0830184611759565b97965050505050505056fea164736f6c634300080d000a";

type ERC1155MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Mock__factory extends ContractFactory {
  constructor(...args: ERC1155MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Mock> {
    return super.deploy(uri, overrides || {}) as Promise<ERC1155Mock>;
  }
  override getDeployTransaction(
    uri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri, overrides || {});
  }
  override attach(address: string): ERC1155Mock {
    return super.attach(address) as ERC1155Mock;
  }
  override connect(signer: Signer): ERC1155Mock__factory {
    return super.connect(signer) as ERC1155Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MockInterface {
    return new utils.Interface(_abi) as ERC1155MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Mock;
  }
}
