/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccessControlCrossChainMock,
  AccessControlCrossChainMockInterface,
} from "../../../openzeppelin-contracts-4.6.0/mocks/AccessControlCrossChainMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "CROSSCHAIN_ALIAS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "crossChainRoleAlias",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
    ],
    name: "senderProtected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "adminRoleId",
        type: "bytes32",
      },
    ],
    name: "setRoleAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001c600033610021565b6100cd565b61002b828261002f565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661002b576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100893390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b48806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80634b9304a411610081578063a217fddf1161005b578063a217fddf146101bf578063d547741f146101c7578063f9d04295146101da57600080fd5b80634b9304a41461016257806391d1485414610175578063933c8dbd146101ac57600080fd5b8063248a9ca3116100b2578063248a9ca31461010b5780632f2ff15d1461013c57806336568abe1461014f57600080fd5b806301ffc9a7146100ce5780631e4e0091146100f6575b600080fd5b6100e16100dc3660046108de565b610201565b60405190151581526020015b60405180910390f35b610109610104366004610908565b610238565b005b61012e61011936600461092a565b60009081526020819052604090206001015490565b6040519081526020016100ed565b61010961014a366004610958565b610246565b61010961015d366004610958565b610270565b61010961017036600461092a565b6102fd565b6100e1610183366004610958565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61012e6101ba36600461092a565b610307565b61012e600081565b6101096101d5366004610958565b610331565b61012e7fe870e9cffded00b0b933338bc23ae12648d8d2d4829802ab37a0908f14773b4d81565b60006001600160e01b03198216637965db0b60e01b148061023257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6102428282610356565b5050565b600082815260208190526040902060010154610261816103a1565b61026b83836103ed565b505050565b6001600160a01b03811633146102f35760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b610242828261048b565b80610242816103a1565b60007fe870e9cffded00b0b933338bc23ae12648d8d2d4829802ab37a0908f14773b4d8218610232565b60008281526020819052604090206001015461034c816103a1565b61026b838361048b565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6103a961050a565b156103e4576103e17fe870e9cffded00b0b933338bc23ae12648d8d2d4829802ab37a0908f14773b4d82186103dc61051b565b61054c565b50565b6103e1816105ca565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610242576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556104473390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1615610242576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061051660646105d4565b905090565b600061052561050a565b6105425760405163253a6fc960e11b815260040160405180910390fd5b6105166064610638565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661024257610588816001600160a01b0316601461072e565b61059383602061072e565b6040516020016105a49291906109b8565b60408051601f198184030181529082905262461bcd60e51b82526102ea91600401610a39565b6103e1813361054c565b6000816001600160a01b03166308bd624c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102329190610a6c565b6000610643826105d4565b6106605760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561069e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c29190610a6c565b6106cc5733610232565b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102329190610a8e565b6060600061073d836002610ac1565b610748906002610ae0565b67ffffffffffffffff81111561076057610760610af8565b6040519080825280601f01601f19166020018201604052801561078a576020820181803683370190505b509050600360fc1b816000815181106107a5576107a5610b0e565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106107d4576107d4610b0e565b60200101906001600160f81b031916908160001a90535060006107f8846002610ac1565b610803906001610ae0565b90505b6001811115610888577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061084457610844610b0e565b1a60f81b82828151811061085a5761085a610b0e565b60200101906001600160f81b031916908160001a90535060049490941c9361088181610b24565b9050610806565b5083156108d75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102ea565b9392505050565b6000602082840312156108f057600080fd5b81356001600160e01b0319811681146108d757600080fd5b6000806040838503121561091b57600080fd5b50508035926020909101359150565b60006020828403121561093c57600080fd5b5035919050565b6001600160a01b03811681146103e157600080fd5b6000806040838503121561096b57600080fd5b82359150602083013561097d81610943565b809150509250929050565b60005b838110156109a357818101518382015260200161098b565b838111156109b2576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516109f0816017850160208801610988565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610a2d816028840160208801610988565b01602801949350505050565b6020815260008251806020840152610a58816040850160208701610988565b601f01601f19169190910160400192915050565b600060208284031215610a7e57600080fd5b815180151581146108d757600080fd5b600060208284031215610aa057600080fd5b81516108d781610943565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610adb57610adb610aab565b500290565b60008219821115610af357610af3610aab565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610b3357610b33610aab565b50600019019056fea164736f6c634300080d000a";

type AccessControlCrossChainMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControlCrossChainMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessControlCrossChainMock__factory extends ContractFactory {
  constructor(...args: AccessControlCrossChainMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessControlCrossChainMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<AccessControlCrossChainMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccessControlCrossChainMock {
    return super.attach(address) as AccessControlCrossChainMock;
  }
  override connect(signer: Signer): AccessControlCrossChainMock__factory {
    return super.connect(signer) as AccessControlCrossChainMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlCrossChainMockInterface {
    return new utils.Interface(_abi) as AccessControlCrossChainMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlCrossChainMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccessControlCrossChainMock;
  }
}
