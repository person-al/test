/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernorWithParamsMock,
  GovernorWithParamsMockInterface,
} from "../../../openzeppelin-contracts-4.6.0/mocks/GovernorWithParamsMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "contract IVotes",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Empty",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "uintParam",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "strParam",
        type: "string",
      },
    ],
    name: "CountParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "VoteCastWithParams",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "EXTENDED_BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "cancel",
    outputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "castVoteWithReasonAndParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteWithReasonAndParamsBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "getVotesWithParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620030bf380380620030bf8339810160408190526200003591620001ee565b808280620000576040805180820190915260018152603160f81b602082015290565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c0526101205250508251620000fd925060009150602084019062000115565b50506001600160a01b031661014052506200031b9050565b8280546200012390620002df565b90600052602060002090601f01602090048101928262000147576000855562000192565b82601f106200016257805160ff191683800117855562000192565b8280016001018555821562000192579182015b828111156200019257825182559160200191906001019062000175565b50620001a0929150620001a4565b5090565b5b80821115620001a05760008155600101620001a5565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001e957600080fd5b919050565b600080604083850312156200020257600080fd5b82516001600160401b03808211156200021a57600080fd5b818501915085601f8301126200022f57600080fd5b815181811115620002445762000244620001bb565b604051601f8201601f19908116603f011681019083821181831017156200026f576200026f620001bb565b816040528281526020935088848487010111156200028c57600080fd5b600091505b82821015620002b0578482018401518183018501529083019062000291565b82821115620002c25760008484830101525b9550620002d4915050858201620001d1565b925050509250929050565b600181811c90821680620002f457607f821691505b6020821081036200031557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051612d426200037d600039600081816106ad0152611c4e015260006117f901526000611848015260006118230152600061177c015260006117a6015260006117d00152612d426000f3fe6080604052600436106101dc5760003560e01c80635678138811610102578063c28bc2fa11610095578063eb9019d411610064578063eb9019d41461062e578063f23a6e611461064e578063f8ce560a1461067a578063fc0c546a1461069b57600080fd5b8063c28bc2fa14610574578063c59057e414610594578063dd4e2ba5146105b4578063deaaa7cc146105fa57600080fd5b80639a802a6d116100d15780639a802a6d146104f4578063b58131b014610514578063bc197c8114610528578063c01f9e371461055457600080fd5b806356781388146104745780635f398a14146104945780637b3c71d3146104b45780637d5e81e2146104d457600080fd5b80632fe3e2611161017a5780634385963211610149578063438596321461038b578063452115d6146103d5578063544ffc9c146103f557806354fd4d501461044a57600080fd5b80632fe3e261146102f65780633932abb11461032a5780633bccf4fd1461033e5780633e4f49e61461035e57600080fd5b806306fdde03116101b657806306fdde031461025d578063150b7a021461027f5780632656227d146102c35780632d63f693146102d657600080fd5b806301ffc9a7146101ea57806302a251a31461021f578063034201811461023d57600080fd5b366101e557005b005b600080fd5b3480156101f657600080fd5b5061020a610205366004611f90565b6106e7565b60405190151581526020015b60405180910390f35b34801561022b57600080fd5b5060105b604051908152602001610216565b34801561024957600080fd5b5061022f6102583660046120e6565b610754565b34801561026957600080fd5b5061027261084c565b60405161021691906121e9565b34801561028b57600080fd5b506102aa61029a366004612213565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610216565b61022f6102d13660046123e7565b6108de565b3480156102e257600080fd5b5061022f6102f1366004612477565b610a0a565b34801561030257600080fd5b5061022f7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b34801561033657600080fd5b50600461022f565b34801561034a57600080fd5b5061022f610359366004612490565b610a43565b34801561036a57600080fd5b5061037e610379366004612477565b610ab9565b60405161021691906124f4565b34801561039757600080fd5b5061020a6103a636600461251c565b60008281526004602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b3480156103e157600080fd5b5061022f6103f03660046123e7565b610bc8565b34801561040157600080fd5b5061042f610410366004612477565b6000908152600460205260409020805460018201546002909201549092565b60408051938452602084019290925290820152606001610216565b34801561045657600080fd5b506040805180820190915260018152603160f81b6020820152610272565b34801561048057600080fd5b5061022f61048f366004612548565b610bdf565b3480156104a057600080fd5b5061022f6104af36600461256b565b610c08565b3480156104c057600080fd5b5061022f6104cf3660046125ef565b610c52565b3480156104e057600080fd5b5061022f6104ef366004612649565b610ca4565b34801561050057600080fd5b5061022f61050f3660046126fe565b610fdd565b34801561052057600080fd5b50600061022f565b34801561053457600080fd5b506102aa610543366004612755565b63bc197c8160e01b95945050505050565b34801561056057600080fd5b5061022f61056f366004612477565b610ff4565b34801561058057600080fd5b506101e361058f3660046127e5565b611024565b3480156105a057600080fd5b5061022f6105af3660046123e7565b6110d3565b3480156105c057600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610272565b34801561060657600080fd5b5061022f7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561063a57600080fd5b5061022f610649366004612827565b61110d565b34801561065a57600080fd5b506102aa610669366004612851565b63f23a6e6160e01b95945050505050565b34801561068657600080fd5b5061022f610695366004612477565b50600090565b3480156106a757600080fd5b506106cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610216565b60006001600160e01b0319821663bf26d89760e01b148061071857506001600160e01b031982166379dd796f60e01b145b8061073357506001600160e01b03198216630271189760e51b145b8061074e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000806107f86107f07fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c6040516107909291906128b6565b60405180910390208b805190602001206040516020016107d5959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b6040516020818303038152906040528051906020012061112e565b86868661117c565b905061083e8a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d925061119a915050565b9a9950505050505050505050565b60606000805461085b906128c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610887906128c6565b80156108d45780601f106108a9576101008083540402835291602001916108d4565b820191906000526020600020905b8154815290600101906020018083116108b757829003601f168201915b5050505050905090565b6000806108ed868686866110d3565b905060006108fa82610ab9565b90506004816007811115610910576109106124de565b148061092d5750600581600781111561092b5761092b6124de565b145b6109885760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084015b60405180910390fd5b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a16109e68288888888611300565b6109f3828888888861138c565b610a008288888888611300565b5095945050505050565b600081815260016020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610a91906107f0906080016107d5565b9050610aae8782886040518060200160405280600081525061148b565b979650505050505050565b6000818152600160205260408120600281015460ff1615610add5750600792915050565b6002810154610100900460ff1615610af85750600292915050565b6000610b0384610a0a565b905080600003610b555760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964000000604482015260640161097f565b438110610b66575060009392505050565b6000610b7185610ff4565b9050438110610b8557506001949350505050565b610b8e856114ae565b8015610bad575060008581526004602052604090208054600190910154115b15610bbd57506004949350505050565b506003949350505050565b6000610bd6858585856114e5565b95945050505050565b600080339050610c008482856040518060200160405280600081525061148b565b949350505050565b600080339050610aae87828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a925061119a915050565b600080339050610c9a86828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061148b92505050565b9695505050505050565b600080610cb633610649600143612916565b1015610d2a5760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f77207060448201527f726f706f73616c207468726573686f6c64000000000000000000000000000000606482015260840161097f565b6000610d3f86868686805190602001206110d3565b90508451865114610d9c5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b606482015260840161097f565b8351865114610df75760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b606482015260840161097f565b6000865111610e485760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c0000000000000000604482015260640161097f565b6000818152600160209081526040918290208251918201909252815467ffffffffffffffff169081905215610ec95760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b606482015260840161097f565b6000610ed56004611603565b610ede43611603565b610ee8919061292d565b90506000610ef66010611603565b610f00908361292d565b835467ffffffffffffffff191667ffffffffffffffff8416178455905060018301805467ffffffffffffffff191667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d5167ffffffffffffffff811115610f7b57610f7b612019565b604051908082528060200260200182016040528015610fae57816020015b6060815260200190600190039081610f995790505b508c88888e604051610fc899989796959493929190612a22565b60405180910390a15091979650505050505050565b6000610fea848484611687565b90505b9392505050565b600081815260016020818152604080842081519283019091529091015467ffffffffffffffff1690819052610a33565b3330146110735760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604482015260640161097f565b61108a565b8061108360026116c1565b0361107857505b6110cc8483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611749915050565b5050505050565b6000848484846040516020016110ec9493929190612b14565b60408051601f19818403018152919052805160209091012095945050505050565b6000610fed838361112960408051602081019091526000815290565b611687565b600061074e61113b61176f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061118d87878787611896565b91509150610a0081611983565b60008581526001602081905260408220906111b488610ab9565b60078111156111c5576111c56124de565b1461121e5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b606482015260840161097f565b6040805160208101909152815467ffffffffffffffff169081905260009061124890889086611687565b90506112578888888488611b3c565b83516000036112ac57866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48988848960405161129f9493929190612b5f565b60405180910390a2610aae565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb871289888489896040516112ed959493929190612b87565b60405180910390a2979650505050505050565b6110cc565b845181101561138457306001600160a01b031685828151811061132a5761132a612bcd565b60200260200101516001600160a01b0316036113745761137483828151811061135557611355612bcd565b6020026020010151805190602001206002611ba790919063ffffffff16565b61137d81612be3565b9050611305565b505050505050565b6000604051806060016040528060278152602001612ce660279139905060005b8551811015611482576000808783815181106113ca576113ca612bcd565b60200260200101516001600160a01b03168784815181106113ed576113ed612bcd565b602002602001015187858151811061140757611407612bcd565b602002602001015160405161141c9190612bfc565b60006040518083038185875af1925050503d8060008114611459576040519150601f19603f3d011682016040523d82523d6000602084013e61145e565b606091505b509150915061146e828286611bec565b5050508061147b90612be3565b90506113ac565b50505050505050565b6000610bd6858585856114a960408051602081019091526000815290565b61119a565b6000818152600460205260408120600281015460018201546114d09190612c18565b6114dc61069585610a0a565b11159392505050565b6000806114f4868686866110d3565b9050600061150182610ab9565b90506002816007811115611517576115176124de565b1415801561153757506006816007811115611534576115346124de565b14155b801561155557506007816007811115611552576115526124de565b14155b6115a15760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a2070726f706f73616c206e6f7420616374697665000000604482015260640161097f565b60008281526001602052604090819020600201805461ff001916610100179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c906115f19084815260200190565b60405180910390a15095945050505050565b600067ffffffffffffffff8211156116835760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f3420626974730000000000000000000000000000000000000000000000000000606482015260840161097f565b5090565b80516000908190156116ab57828060200190518101906116a79190612c30565b5090505b806116b7868686611c25565b610bd69190612916565b60006116dc8254600f81810b600160801b909204900b131590565b156116fa57604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016fffffffffffffffffffffffffffffffff169190911790915590565b6060610fea848484604051806060016040528060298152602001612d0d60299139611cbb565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156117c857507f000000000000000000000000000000000000000000000000000000000000000046145b156117f257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118cd575060009050600361197a565b8460ff16601b141580156118e557508460ff16601c14155b156118f6575060009050600461197a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561194a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119735760006001925092505061197a565b9150600090505b94509492505050565b6000816004811115611997576119976124de565b0361199f5750565b60018160048111156119b3576119b36124de565b03611a005760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161097f565b6002816004811115611a1457611a146124de565b03611a615760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161097f565b6003816004811115611a7557611a756124de565b03611acd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161097f565b6004816004811115611ae157611ae16124de565b03611b395760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161097f565b50565b805115611b9a5760008082806020019051810190611b5a9190612c30565b915091507f94b59a4daf412d4eaa215a1de4584cbae5ad56712ec7d4cec4f9ed4dce2cfa208282604051611b8f929190612cb3565b60405180910390a150505b6110cc8585858585611df8565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546fffffffffffffffffffffffffffffffff908116939091011602179055565b60608315611bfb575081610fed565b825115611c0b5782518084602001fd5b8160405162461bcd60e51b815260040161097f91906121e9565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a890604401602060405180830381865afa158015611c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fea9190612ccc565b606082471015611d335760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161097f565b6001600160a01b0385163b611d8a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161097f565b600080866001600160a01b03168587604051611da69190612bfc565b60006040518083038185875af1925050503d8060008114611de3576040519150601f19603f3d011682016040523d82523d6000602084013e611de8565b606091505b5091509150610aae828286611bec565b60008581526004602090815260408083206001600160a01b0388168452600381019092529091205460ff1615611e965760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160448201527f6479206361737400000000000000000000000000000000000000000000000000606482015260840161097f565b6001600160a01b03851660009081526003820160205260409020805460ff1916600117905560ff8416611ee25782816000016000828254611ed79190612c18565b909155506113849050565b60001960ff851601611f025782816001016000828254611ed79190612c18565b60011960ff851601611f225782816002016000828254611ed79190612c18565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f7465547970650000000000000000000000606482015260840161097f565b600060208284031215611fa257600080fd5b81356001600160e01b031981168114610fed57600080fd5b803560ff81168114611fcb57600080fd5b919050565b60008083601f840112611fe257600080fd5b50813567ffffffffffffffff811115611ffa57600080fd5b60208301915083602082850101111561201257600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561205857612058612019565b604052919050565b600067ffffffffffffffff82111561207a5761207a612019565b50601f01601f191660200190565b600061209b61209684612060565b61202f565b90508281528383830111156120af57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126120d757600080fd5b610fed83833560208501612088565b60008060008060008060008060e0898b03121561210257600080fd5b8835975061211260208a01611fba565b9650604089013567ffffffffffffffff8082111561212f57600080fd5b61213b8c838d01611fd0565b909850965060608b013591508082111561215457600080fd5b506121618b828c016120c6565b94505061217060808a01611fba565b925060a0890135915060c089013590509295985092959890939650565b60005b838110156121a8578181015183820152602001612190565b838111156121b7576000848401525b50505050565b600081518084526121d581602086016020860161218d565b601f01601f19169290920160200192915050565b602081526000610fed60208301846121bd565b80356001600160a01b0381168114611fcb57600080fd5b6000806000806080858703121561222957600080fd5b612232856121fc565b9350612240602086016121fc565b925060408501359150606085013567ffffffffffffffff81111561226357600080fd5b61226f878288016120c6565b91505092959194509250565b600067ffffffffffffffff82111561229557612295612019565b5060051b60200190565b600082601f8301126122b057600080fd5b813560206122c06120968361227b565b82815260059290921b840181019181810190868411156122df57600080fd5b8286015b84811015612301576122f4816121fc565b83529183019183016122e3565b509695505050505050565b600082601f83011261231d57600080fd5b8135602061232d6120968361227b565b82815260059290921b8401810191818101908684111561234c57600080fd5b8286015b848110156123015780358352918301918301612350565b600082601f83011261237857600080fd5b813560206123886120968361227b565b82815260059290921b840181019181810190868411156123a757600080fd5b8286015b8481101561230157803567ffffffffffffffff8111156123cb5760008081fd5b6123d98986838b01016120c6565b8452509183019183016123ab565b600080600080608085870312156123fd57600080fd5b843567ffffffffffffffff8082111561241557600080fd5b6124218883890161229f565b9550602087013591508082111561243757600080fd5b6124438883890161230c565b9450604087013591508082111561245957600080fd5b5061246687828801612367565b949793965093946060013593505050565b60006020828403121561248957600080fd5b5035919050565b600080600080600060a086880312156124a857600080fd5b853594506124b860208701611fba565b93506124c660408701611fba565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061251657634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561252f57600080fd5b8235915061253f602084016121fc565b90509250929050565b6000806040838503121561255b57600080fd5b8235915061253f60208401611fba565b60008060008060006080868803121561258357600080fd5b8535945061259360208701611fba565b9350604086013567ffffffffffffffff808211156125b057600080fd5b6125bc89838a01611fd0565b909550935060608801359150808211156125d557600080fd5b506125e2888289016120c6565b9150509295509295909350565b6000806000806060858703121561260557600080fd5b8435935061261560208601611fba565b9250604085013567ffffffffffffffff81111561263157600080fd5b61263d87828801611fd0565b95989497509550505050565b6000806000806080858703121561265f57600080fd5b843567ffffffffffffffff8082111561267757600080fd5b6126838883890161229f565b9550602087013591508082111561269957600080fd5b6126a58883890161230c565b945060408701359150808211156126bb57600080fd5b6126c788838901612367565b935060608701359150808211156126dd57600080fd5b508501601f810187136126ef57600080fd5b61226f87823560208401612088565b60008060006060848603121561271357600080fd5b61271c846121fc565b925060208401359150604084013567ffffffffffffffff81111561273f57600080fd5b61274b868287016120c6565b9150509250925092565b600080600080600060a0868803121561276d57600080fd5b612776866121fc565b9450612784602087016121fc565b9350604086013567ffffffffffffffff808211156127a157600080fd5b6127ad89838a0161230c565b945060608801359150808211156127c357600080fd5b6127cf89838a0161230c565b935060808801359150808211156125d557600080fd5b600080600080606085870312156127fb57600080fd5b612804856121fc565b935060208501359250604085013567ffffffffffffffff81111561263157600080fd5b6000806040838503121561283a57600080fd5b612843836121fc565b946020939093013593505050565b600080600080600060a0868803121561286957600080fd5b612872866121fc565b9450612880602087016121fc565b93506040860135925060608601359150608086013567ffffffffffffffff8111156128aa57600080fd5b6125e2888289016120c6565b8183823760009101908152919050565b600181811c908216806128da57607f821691505b6020821081036128fa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561292857612928612900565b500390565b600067ffffffffffffffff80831681851680830382111561295057612950612900565b01949350505050565b600081518084526020808501945080840160005b838110156129925781516001600160a01b03168752958201959082019060010161296d565b509495945050505050565b600081518084526020808501945080840160005b83811015612992578151875295820195908201906001016129b1565b600081518084526020808501808196508360051b8101915082860160005b85811015612a15578284038952612a038483516121bd565b988501989350908401906001016129eb565b5091979650505050505050565b60006101208b835260206001600160a01b038c1681850152816040850152612a4c8285018c612959565b91508382036060850152612a60828b61299d565b915083820360808501528189518084528284019150828160051b850101838c0160005b83811015612ab157601f19878403018552612a9f8383516121bd565b94860194925090850190600101612a83565b505086810360a0880152612ac5818c6129cd565b945050505050612ae160c084018767ffffffffffffffff169052565b67ffffffffffffffff851660e0840152828103610100840152612b0481856121bd565b9c9b505050505050505050505050565b608081526000612b276080830187612959565b8281036020840152612b39818761299d565b90508281036040840152612b4d81866129cd565b91505082606083015295945050505050565b84815260ff84166020820152826040820152608060608201526000610c9a60808301846121bd565b85815260ff8516602082015283604082015260a060608201526000612baf60a08301856121bd565b8281036080840152612bc181856121bd565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201612bf557612bf5612900565b5060010190565b60008251612c0e81846020870161218d565b9190910192915050565b60008219821115612c2b57612c2b612900565b500190565b60008060408385031215612c4357600080fd5b82519150602083015167ffffffffffffffff811115612c6157600080fd5b8301601f81018513612c7257600080fd5b8051612c8061209682612060565b818152866020838501011115612c9557600080fd5b612ca682602083016020860161218d565b8093505050509250929050565b828152604060208201526000610fea60408301846121bd565b600060208284031215612cde57600080fd5b505191905056fe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a164736f6c634300080d000a";

type GovernorWithParamsMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorWithParamsMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorWithParamsMock__factory extends ContractFactory {
  constructor(...args: GovernorWithParamsMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernorWithParamsMock> {
    return super.deploy(
      name_,
      token_,
      overrides || {}
    ) as Promise<GovernorWithParamsMock>;
  }
  override getDeployTransaction(
    name_: string,
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, token_, overrides || {});
  }
  override attach(address: string): GovernorWithParamsMock {
    return super.attach(address) as GovernorWithParamsMock;
  }
  override connect(signer: Signer): GovernorWithParamsMock__factory {
    return super.connect(signer) as GovernorWithParamsMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorWithParamsMockInterface {
    return new utils.Interface(_abi) as GovernorWithParamsMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorWithParamsMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GovernorWithParamsMock;
  }
}
