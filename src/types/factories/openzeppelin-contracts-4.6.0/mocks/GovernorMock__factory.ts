/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernorMock,
  GovernorMockInterface,
} from "../../../openzeppelin-contracts-4.6.0/mocks/GovernorMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "contract IVotes",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votingDelay_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingPeriod_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quorumNumerator_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Empty",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposalThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "ProposalThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldQuorumNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "QuorumNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "VoteCastWithParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "VotingDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "VotingPeriodSet",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "EXTENDED_BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "cancel",
    outputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "castVoteWithReasonAndParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteWithReasonAndParamsBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "getVotesWithParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "setProposalThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "setVotingDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "setVotingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620037c4380380620037c4833981016040819052620000359162000419565b80848484600089806200005c6040805180820190915260018152603160f81b602082015290565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c052610120525050825162000102925060009150602084019062000340565b50620001109050836200014d565b6200011b826200018e565b620001268162000235565b5050506001600160a01b031661014052620001418162000276565b50505050505062000561565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b60008111620001f45760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b6064811115620002fb5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401620001eb565b600780549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b8280546200034e9062000525565b90600052602060002090601f016020900481019282620003725760008555620003bd565b82601f106200038d57805160ff1916838001178555620003bd565b82800160010185558215620003bd579182015b82811115620003bd578251825591602001919060010190620003a0565b50620003cb929150620003cf565b5090565b5b80821115620003cb5760008155600101620003d0565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200041457600080fd5b919050565b600080600080600060a086880312156200043257600080fd5b85516001600160401b03808211156200044a57600080fd5b818801915088601f8301126200045f57600080fd5b815181811115620004745762000474620003e6565b604051601f8201601f19908116603f011681019083821181831017156200049f576200049f620003e6565b81604052828152602093508b84848701011115620004bc57600080fd5b600091505b82821015620004e05784820184015181830185015290830190620004c1565b82821115620004f25760008484830101525b985062000504915050888201620003fc565b604089015160608a01516080909a0151989b919a5098979650945050505050565b600181811c908216806200053a57607f821691505b6020821081036200055b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051610140516131fa620005ca600039600081816107ea01528181611113015261183701526000611a4c01526000611a9b01526000611a76015260006119cf015260006119f901526000611a2301526131fa6000f3fe60806040526004361061026e5760003560e01c806370b0f66011610153578063c28bc2fa116100cb578063eb9019d41161007f578063f23a6e6111610064578063f23a6e611461078c578063f8ce560a146107b8578063fc0c546a146107d857600080fd5b8063eb9019d41461074c578063ece40cc11461076c57600080fd5b8063dd4e2ba5116100b0578063dd4e2ba5146106b2578063deaaa7cc146106f8578063ea0217cf1461072c57600080fd5b8063c28bc2fa14610672578063c59057e41461069257600080fd5b80639a802a6d11610122578063b58131b011610107578063b58131b014610611578063bc197c8114610626578063c01f9e371461065257600080fd5b80639a802a6d146105dc578063a7713a70146105fc57600080fd5b806370b0f660146105685780637b3c71d3146105885780637d5e81e2146105a857806397c3d334146105c857600080fd5b80633932abb1116101e6578063452115d6116101b557806354fd4d501161019a57806354fd4d50146104fe57806356781388146105285780635f398a141461054857600080fd5b8063452115d614610489578063544ffc9c146104a957600080fd5b80633932abb1146103dd5780633bccf4fd146103f25780633e4f49e614610412578063438596321461043f57600080fd5b806306fdde031161023d5780632656227d116102225780632656227d146103765780632d63f693146103895780632fe3e261146103a957600080fd5b806306fdde0314610310578063150b7a021461033257600080fd5b806301ffc9a71461027c57806302a251a3146102b157806303420181146102d057806306f3f9e6146102f057600080fd5b3661027757005b005b600080fd5b34801561028857600080fd5b5061029c6102973660046124ac565b610824565b60405190151581526020015b60405180910390f35b3480156102bd57600080fd5b506005545b6040519081526020016102a8565b3480156102dc57600080fd5b506102c26102eb3660046125f4565b610891565b3480156102fc57600080fd5b5061027561030b36600461269b565b610989565b34801561031c57600080fd5b506103256109fb565b6040516102a89190612710565b34801561033e57600080fd5b5061035d61034d36600461273a565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016102a8565b6102c2610384366004612913565b610a8d565b34801561039557600080fd5b506102c26103a436600461269b565b610bb4565b3480156103b557600080fd5b506102c27fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b3480156103e957600080fd5b506004546102c2565b3480156103fe57600080fd5b506102c261040d3660046129a3565b610bed565b34801561041e57600080fd5b5061043261042d36600461269b565b610c63565b6040516102a89190612a07565b34801561044b57600080fd5b5061029c61045a366004612a2f565b60008281526008602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b34801561049557600080fd5b506102c26104a4366004612913565b610d72565b3480156104b557600080fd5b506104e36104c436600461269b565b6000908152600860205260409020805460018201546002909201549092565b604080519384526020840192909252908201526060016102a8565b34801561050a57600080fd5b506040805180820190915260018152603160f81b6020820152610325565b34801561053457600080fd5b506102c2610543366004612a5b565b610d89565b34801561055457600080fd5b506102c2610563366004612a7e565b610db2565b34801561057457600080fd5b5061027561058336600461269b565b610dfc565b34801561059457600080fd5b506102c26105a3366004612b02565b610e66565b3480156105b457600080fd5b506102c26105c3366004612b5c565b610eb8565b3480156105d457600080fd5b5060646102c2565b3480156105e857600080fd5b506102c26105f7366004612c11565b610ec6565b34801561060857600080fd5b506007546102c2565b34801561061d57600080fd5b506102c2610edd565b34801561063257600080fd5b5061035d610641366004612c68565b63bc197c8160e01b95945050505050565b34801561065e57600080fd5b506102c261066d36600461269b565b610eed565b34801561067e57600080fd5b5061027561068d366004612cf8565b610f1d565b34801561069e57600080fd5b506102c26106ad366004612913565b610fc7565b3480156106be57600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610325565b34801561070457600080fd5b506102c27f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561073857600080fd5b5061027561074736600461269b565b611001565b34801561075857600080fd5b506102c2610767366004612d3a565b61106b565b34801561077857600080fd5b5061027561078736600461269b565b61108c565b34801561079857600080fd5b5061035d6107a7366004612d64565b63f23a6e6160e01b95945050505050565b3480156107c457600080fd5b506102c26107d336600461269b565b6110f6565b3480156107e457600080fd5b5061080c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102a8565b60006001600160e01b0319821663bf26d89760e01b148061085557506001600160e01b031982166379dd796f60e01b145b8061087057506001600160e01b03198216630271189760e51b145b8061088b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008061093561092d7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c6040516108cd929190612dc9565b60405180910390208b80519060200120604051602001610912959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b6040516020818303038152906040528051906020012061119a565b8686866111e8565b905061097b8a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d9250611206915050565b9a9950505050505050505050565b3330146109d85760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064015b60405180910390fd5b6109ef565b806109e8600261136c565b036109dd57505b6109f8816113f4565b50565b606060008054610a0a90612dd9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3690612dd9565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b5050505050905090565b600080610a9c86868686610fc7565b90506000610aa982610c63565b90506004816007811115610abf57610abf6129f1565b1480610adc57506005816007811115610ada57610ada6129f1565b145b610b325760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084016109cf565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a1610b9082888888886114bc565b610b9d8288888888611548565b610baa82888888886114bc565b5095945050505050565b600081815260016020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610c3b9061092d90608001610912565b9050610c5887828860405180602001604052806000815250611647565b979650505050505050565b6000818152600160205260408120600281015460ff1615610c875750600792915050565b6002810154610100900460ff1615610ca25750600292915050565b6000610cad84610bb4565b905080600003610cff5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c20696400000060448201526064016109cf565b438110610d10575060009392505050565b6000610d1b85610eed565b9050438110610d2f57506001949350505050565b610d388561166a565b8015610d57575060008581526008602052604090208054600190910154115b15610d6757506004949350505050565b506003949350505050565b6000610d80858585856116a1565b95945050505050565b600080339050610daa84828560405180602001604052806000815250611647565b949350505050565b600080339050610c5887828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250611206915050565b333014610e465760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016109cf565b610e5d565b80610e56600261136c565b03610e4b57505b6109f8816117bf565b600080339050610eae86828787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061164792505050565b9695505050505050565b6000610d8085858585611800565b6000610ed384848461180e565b90505b9392505050565b6000610ee860065490565b905090565b600081815260016020818152604080842081519283019091529091015467ffffffffffffffff1690819052610bdd565b333014610f675760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016109cf565b610f7e565b80610f77600261136c565b03610f6c57505b610fc08483838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506118a4915050565b5050505050565b600084848484604051602001610fe09493929190612edc565b60408051601f19818403018152919052805160209091012095945050505050565b33301461104b5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016109cf565b611062565b8061105b600261136c565b0361105057505b6109f8816118ca565b6000610ed6838361108760408051602081019091526000815290565b61180e565b3330146110d65760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016109cf565b6110ed565b806110e6600261136c565b036110db57505b6109f881611981565b60006064600754604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c90602401602060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111869190612f27565b6111909190612f56565b61088b9190612f75565b600061088b6111a76119c2565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006111f987878787611ae9565b91509150610baa81611bd6565b600085815260016020819052604082209061122088610c63565b6007811115611231576112316129f1565b1461128a5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b60648201526084016109cf565b6040805160208101909152815467ffffffffffffffff16908190526000906112b49088908661180e565b90506112c38888888488611d8c565b835160000361131857866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48988848960405161130b9493929190612f97565b60405180910390a2610c58565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb87128988848989604051611359959493929190612fbf565b60405180910390a2979650505050505050565b60006113878254600f81810b600160801b909204900b131590565b156113a557604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016fffffffffffffffffffffffffffffffff169190911790915590565b60648111156114775760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4016109cf565b600780549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b610fc0565b845181101561154057306001600160a01b03168582815181106114e6576114e6613005565b60200260200101516001600160a01b0316036115305761153083828151811061151157611511613005565b6020026020010151805190602001206002611f2490919063ffffffff16565b6115398161301b565b90506114c1565b505050505050565b600060405180606001604052806027815260200161319e60279139905060005b855181101561163e5760008087838151811061158657611586613005565b60200260200101516001600160a01b03168784815181106115a9576115a9613005565b60200260200101518785815181106115c3576115c3613005565b60200260200101516040516115d89190613034565b60006040518083038185875af1925050503d8060008114611615576040519150601f19603f3d011682016040523d82523d6000602084013e61161a565b606091505b509150915061162a828286611f69565b505050806116379061301b565b9050611568565b50505050505050565b6000610d808585858561166560408051602081019091526000815290565b611206565b60008181526008602052604081206002810154600182015461168c9190613050565b6116986107d385610bb4565b11159392505050565b6000806116b086868686610fc7565b905060006116bd82610c63565b905060028160078111156116d3576116d36129f1565b141580156116f3575060068160078111156116f0576116f06129f1565b14155b80156117115750600781600781111561170e5761170e6129f1565b14155b61175d5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a2070726f706f73616c206e6f742061637469766500000060448201526064016109cf565b60008281526001602052604090819020600201805461ff001916610100179055517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c906117ad9084815260200190565b60405180910390a15095945050505050565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b6000610d8085858585611fa2565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a890604401602060405180830381865afa158015611880573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed39190612f27565b6060610ed38484846040518060600160405280602981526020016131c5602991396122eb565b600081116119405760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f642060448201527f746f6f206c6f770000000000000000000000000000000000000000000000000060648201526084016109cf565b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611a1b57507f000000000000000000000000000000000000000000000000000000000000000046145b15611a4557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611b205750600090506003611bcd565b8460ff16601b14158015611b3857508460ff16601c14155b15611b495750600090506004611bcd565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b9d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611bc657600060019250925050611bcd565b9150600090505b94509492505050565b6000816004811115611bea57611bea6129f1565b03611bf25750565b6001816004811115611c0657611c066129f1565b03611c535760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016109cf565b6002816004811115611c6757611c676129f1565b03611cb45760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016109cf565b6003816004811115611cc857611cc86129f1565b03611d205760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016109cf565b6004816004811115611d3457611d346129f1565b036109f85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016109cf565b60008581526008602090815260408083206001600160a01b0388168452600381019092529091205460ff1615611e2a5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160448201527f647920636173740000000000000000000000000000000000000000000000000060648201526084016109cf565b6001600160a01b03851660009081526003820160205260409020805460ff1916600117905560ff8416611e765782816000016000828254611e6b9190613050565b909155506115409050565b60001960ff851601611e965782816001016000828254611e6b9190613050565b60011960ff851601611eb65782816002016000828254611e6b9190613050565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f746554797065000000000000000000000060648201526084016109cf565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546fffffffffffffffffffffffffffffffff908116939091011602179055565b60608315611f78575081610ed6565b825115611f885782518084602001fd5b8160405162461bcd60e51b81526004016109cf9190612710565b6000611fac610edd565b611fbb33610767600143613068565b101561202f5760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f77207060448201527f726f706f73616c207468726573686f6c6400000000000000000000000000000060648201526084016109cf565b60006120448686868680519060200120610fc7565b905084518651146120a15760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016109cf565b83518651146120fc5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016109cf565b600086511161214d5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c000000000000000060448201526064016109cf565b6000818152600160209081526040918290208251918201909252815467ffffffffffffffff1690819052156121ce5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b60648201526084016109cf565b60006121e16121dc60045490565b612428565b6121ea43612428565b6121f4919061307f565b905060006122046121dc60055490565b61220e908361307f565b835467ffffffffffffffff191667ffffffffffffffff8416178455905060018301805467ffffffffffffffff191667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d5167ffffffffffffffff81111561228957612289612535565b6040519080825280602002602001820160405280156122bc57816020015b60608152602001906001900390816122a75790505b508c88888e6040516122d6999897969594939291906130ab565b60405180910390a15091979650505050505050565b6060824710156123635760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016109cf565b6001600160a01b0385163b6123ba5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109cf565b600080866001600160a01b031685876040516123d69190613034565b60006040518083038185875af1925050503d8060008114612413576040519150601f19603f3d011682016040523d82523d6000602084013e612418565b606091505b5091509150610c58828286611f69565b600067ffffffffffffffff8211156124a85760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f342062697473000000000000000000000000000000000000000000000000000060648201526084016109cf565b5090565b6000602082840312156124be57600080fd5b81356001600160e01b031981168114610ed657600080fd5b803560ff811681146124e757600080fd5b919050565b60008083601f8401126124fe57600080fd5b50813567ffffffffffffffff81111561251657600080fd5b60208301915083602082850101111561252e57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561257457612574612535565b604052919050565b600067ffffffffffffffff83111561259657612596612535565b6125a9601f8401601f191660200161254b565b90508281528383830111156125bd57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126125e557600080fd5b610ed68383356020850161257c565b60008060008060008060008060e0898b03121561261057600080fd5b8835975061262060208a016124d6565b9650604089013567ffffffffffffffff8082111561263d57600080fd5b6126498c838d016124ec565b909850965060608b013591508082111561266257600080fd5b5061266f8b828c016125d4565b94505061267e60808a016124d6565b925060a0890135915060c089013590509295985092959890939650565b6000602082840312156126ad57600080fd5b5035919050565b60005b838110156126cf5781810151838201526020016126b7565b838111156126de576000848401525b50505050565b600081518084526126fc8160208601602086016126b4565b601f01601f19169290920160200192915050565b602081526000610ed660208301846126e4565b80356001600160a01b03811681146124e757600080fd5b6000806000806080858703121561275057600080fd5b61275985612723565b935061276760208601612723565b925060408501359150606085013567ffffffffffffffff81111561278a57600080fd5b612796878288016125d4565b91505092959194509250565b600067ffffffffffffffff8211156127bc576127bc612535565b5060051b60200190565b600082601f8301126127d757600080fd5b813560206127ec6127e7836127a2565b61254b565b82815260059290921b8401810191818101908684111561280b57600080fd5b8286015b8481101561282d5761282081612723565b835291830191830161280f565b509695505050505050565b600082601f83011261284957600080fd5b813560206128596127e7836127a2565b82815260059290921b8401810191818101908684111561287857600080fd5b8286015b8481101561282d578035835291830191830161287c565b600082601f8301126128a457600080fd5b813560206128b46127e7836127a2565b82815260059290921b840181019181810190868411156128d357600080fd5b8286015b8481101561282d57803567ffffffffffffffff8111156128f75760008081fd5b6129058986838b01016125d4565b8452509183019183016128d7565b6000806000806080858703121561292957600080fd5b843567ffffffffffffffff8082111561294157600080fd5b61294d888389016127c6565b9550602087013591508082111561296357600080fd5b61296f88838901612838565b9450604087013591508082111561298557600080fd5b5061299287828801612893565b949793965093946060013593505050565b600080600080600060a086880312156129bb57600080fd5b853594506129cb602087016124d6565b93506129d9604087016124d6565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b6020810160088310612a2957634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612a4257600080fd5b82359150612a5260208401612723565b90509250929050565b60008060408385031215612a6e57600080fd5b82359150612a52602084016124d6565b600080600080600060808688031215612a9657600080fd5b85359450612aa6602087016124d6565b9350604086013567ffffffffffffffff80821115612ac357600080fd5b612acf89838a016124ec565b90955093506060880135915080821115612ae857600080fd5b50612af5888289016125d4565b9150509295509295909350565b60008060008060608587031215612b1857600080fd5b84359350612b28602086016124d6565b9250604085013567ffffffffffffffff811115612b4457600080fd5b612b50878288016124ec565b95989497509550505050565b60008060008060808587031215612b7257600080fd5b843567ffffffffffffffff80821115612b8a57600080fd5b612b96888389016127c6565b95506020870135915080821115612bac57600080fd5b612bb888838901612838565b94506040870135915080821115612bce57600080fd5b612bda88838901612893565b93506060870135915080821115612bf057600080fd5b508501601f81018713612c0257600080fd5b6127968782356020840161257c565b600080600060608486031215612c2657600080fd5b612c2f84612723565b925060208401359150604084013567ffffffffffffffff811115612c5257600080fd5b612c5e868287016125d4565b9150509250925092565b600080600080600060a08688031215612c8057600080fd5b612c8986612723565b9450612c9760208701612723565b9350604086013567ffffffffffffffff80821115612cb457600080fd5b612cc089838a01612838565b94506060880135915080821115612cd657600080fd5b612ce289838a01612838565b93506080880135915080821115612ae857600080fd5b60008060008060608587031215612d0e57600080fd5b612d1785612723565b935060208501359250604085013567ffffffffffffffff811115612b4457600080fd5b60008060408385031215612d4d57600080fd5b612d5683612723565b946020939093013593505050565b600080600080600060a08688031215612d7c57600080fd5b612d8586612723565b9450612d9360208701612723565b93506040860135925060608601359150608086013567ffffffffffffffff811115612dbd57600080fd5b612af5888289016125d4565b8183823760009101908152919050565b600181811c90821680612ded57607f821691505b602082108103612e0d57634e487b7160e01b600052602260045260246000fd5b50919050565b600081518084526020808501945080840160005b83811015612e4c5781516001600160a01b031687529582019590820190600101612e27565b509495945050505050565b600081518084526020808501945080840160005b83811015612e4c57815187529582019590820190600101612e6b565b600081518084526020808501808196508360051b8101915082860160005b85811015612ecf578284038952612ebd8483516126e4565b98850198935090840190600101612ea5565b5091979650505050505050565b608081526000612eef6080830187612e13565b8281036020840152612f018187612e57565b90508281036040840152612f158186612e87565b91505082606083015295945050505050565b600060208284031215612f3957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612f7057612f70612f40565b500290565b600082612f9257634e487b7160e01b600052601260045260246000fd5b500490565b84815260ff84166020820152826040820152608060608201526000610eae60808301846126e4565b85815260ff8516602082015283604082015260a060608201526000612fe760a08301856126e4565b8281036080840152612ff981856126e4565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161302d5761302d612f40565b5060010190565b600082516130468184602087016126b4565b9190910192915050565b6000821982111561306357613063612f40565b500190565b60008282101561307a5761307a612f40565b500390565b600067ffffffffffffffff8083168185168083038211156130a2576130a2612f40565b01949350505050565b60006101208b835260206001600160a01b038c16818501528160408501526130d58285018c612e13565b915083820360608501526130e9828b612e57565b915083820360808501528189518084528284019150828160051b850101838c0160005b8381101561313a57601f198784030185526131288383516126e4565b9486019492509085019060010161310c565b505086810360a088015261314e818c612e87565b94505050505061316a60c084018767ffffffffffffffff169052565b67ffffffffffffffff851660e084015282810361010084015261318d81856126e4565b9c9b50505050505050505050505056fe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a164736f6c634300080d000a";

type GovernorMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorMock__factory extends ContractFactory {
  constructor(...args: GovernorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    token_: string,
    votingDelay_: BigNumberish,
    votingPeriod_: BigNumberish,
    quorumNumerator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernorMock> {
    return super.deploy(
      name_,
      token_,
      votingDelay_,
      votingPeriod_,
      quorumNumerator_,
      overrides || {}
    ) as Promise<GovernorMock>;
  }
  override getDeployTransaction(
    name_: string,
    token_: string,
    votingDelay_: BigNumberish,
    votingPeriod_: BigNumberish,
    quorumNumerator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      token_,
      votingDelay_,
      votingPeriod_,
      quorumNumerator_,
      overrides || {}
    );
  }
  override attach(address: string): GovernorMock {
    return super.attach(address) as GovernorMock;
  }
  override connect(signer: Signer): GovernorMock__factory {
    return super.connect(signer) as GovernorMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorMockInterface {
    return new utils.Interface(_abi) as GovernorMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorMock {
    return new Contract(address, _abi, signerOrProvider) as GovernorMock;
  }
}
