/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VestingWallet,
  VestingWalletInterface,
} from "../../../openzeppelin-contracts-4.6.0/finance/VestingWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiaryAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "startTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "durationSeconds",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherReleased",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610d06380380610d0683398101604081905261002f916100dd565b6001600160a01b03831661009c5760405162461bcd60e51b815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a65604482015269726f206164647265737360b01b606482015260840160405180910390fd5b6001600160a01b039092166080526001600160401b0390811660a0521660c05261012e565b80516001600160401b03811681146100d857600080fd5b919050565b6000806000606084860312156100f257600080fd5b83516001600160a01b038116811461010957600080fd5b9250610117602085016100c1565b9150610125604085016100c1565b90509250925092565b60805160a05160c051610b7961018d6000396000818160e8015281816104a2015261050501526000818161020b01528181610452015281816104c601526105300152600081816101520152818161030001526104260152610b796000f3fe60806040526004361061009a5760003560e01c8063810ec23b11610069578063961325211161004e57806396132521146101b15780639852595c146101c6578063be9a6555146101fc57600080fd5b8063810ec23b1461017c57806386d1a69f1461019c57600080fd5b80630a17b06b146100a65780630fb5a6b4146100d9578063191655871461011657806338af3eed1461013857600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506100c66100c13660046109ac565b610239565b6040519081526020015b60405180910390f35b3480156100e557600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100c6565b34801561012257600080fd5b506101366101313660046109de565b61025d565b005b34801561014457600080fd5b506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020016100d0565b34801561018857600080fd5b506100c66101973660046109f9565b610329565b3480156101a857600080fd5b506101366103bf565b3480156101bd57600080fd5b506000546100c6565b3480156101d257600080fd5b506100c66101e13660046109de565b6001600160a01b031660009081526001602052604090205490565b34801561020857600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100c6565b600061025761024760005490565b6102519047610a42565b8361044e565b92915050565b6001600160a01b0381166000908152600160205260408120546102808342610329565b61028a9190610a5a565b6001600160a01b0383166000908152600160205260408120805492935083929091906102b7908490610a42565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a2610325827f000000000000000000000000000000000000000000000000000000000000000083610588565b5050565b6001600160a01b0382166000908152600160205260408120546103b8906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa15801561038a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ae9190610a71565b6102519190610a42565b9392505050565b600080546103cc42610239565b6103d69190610a5a565b9050806000808282546103e99190610a42565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161044b7f0000000000000000000000000000000000000000000000000000000000000000826105f4565b50565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff168267ffffffffffffffff16101561049457506000610257565b6104eb67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116907f000000000000000000000000000000000000000000000000000000000000000016610a42565b8267ffffffffffffffff161115610503575081610257565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1661056d9067ffffffffffffffff8516610a5a565b6105779085610a8a565b6105819190610aa9565b9050610257565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526105ef908490610712565b505050565b804710156106495760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610696576040519150601f19603f3d011682016040523d82523d6000602084013e61069b565b606091505b50509050806105ef5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610640565b6000610767826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107f79092919063ffffffff16565b8051909150156105ef57808060200190518101906107859190610acb565b6105ef5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610640565b6060610806848460008561080e565b949350505050565b6060824710156108865760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610640565b6001600160a01b0385163b6108dd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610640565b600080866001600160a01b031685876040516108f99190610b1d565b60006040518083038185875af1925050503d8060008114610936576040519150601f19603f3d011682016040523d82523d6000602084013e61093b565b606091505b509150915061094b828286610956565b979650505050505050565b606083156109655750816103b8565b8251156109755782518084602001fd5b8160405162461bcd60e51b81526004016106409190610b39565b803567ffffffffffffffff811681146109a757600080fd5b919050565b6000602082840312156109be57600080fd5b6103b88261098f565b80356001600160a01b03811681146109a757600080fd5b6000602082840312156109f057600080fd5b6103b8826109c7565b60008060408385031215610a0c57600080fd5b610a15836109c7565b9150610a236020840161098f565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a5557610a55610a2c565b500190565b600082821015610a6c57610a6c610a2c565b500390565b600060208284031215610a8357600080fd5b5051919050565b6000816000190483118215151615610aa457610aa4610a2c565b500290565b600082610ac657634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610add57600080fd5b815180151581146103b857600080fd5b60005b83811015610b08578181015183820152602001610af0565b83811115610b17576000848401525b50505050565b60008251610b2f818460208701610aed565b9190910192915050565b6020815260008251806020840152610b58816040850160208701610aed565b601f01601f1916919091016040019291505056fea164736f6c634300080d000a";

type VestingWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestingWallet__factory extends ContractFactory {
  constructor(...args: VestingWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    beneficiaryAddress: string,
    startTimestamp: BigNumberish,
    durationSeconds: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VestingWallet> {
    return super.deploy(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    ) as Promise<VestingWallet>;
  }
  override getDeployTransaction(
    beneficiaryAddress: string,
    startTimestamp: BigNumberish,
    durationSeconds: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    );
  }
  override attach(address: string): VestingWallet {
    return super.attach(address) as VestingWallet;
  }
  override connect(signer: Signer): VestingWallet__factory {
    return super.connect(signer) as VestingWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingWalletInterface {
    return new utils.Interface(_abi) as VestingWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingWallet {
    return new Contract(address, _abi, signerOrProvider) as VestingWallet;
  }
}
